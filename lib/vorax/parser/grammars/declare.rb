
# line 1 "lib/vorax/parser/grammars/declare.rl"

# line 62 "lib/vorax/parser/grammars/declare.rl"


module Vorax

  module Parser

    # A class used to parse a declare section
    class Declare

      attr_reader :items

			def initialize(declare_code)
			  @code = declare_code
			  walk(@code)
			end

      # Walks the provided spec in order to compute the structure.
      #
      # param data [String] the package spec
      def walk(data)
        @declared_at = nil
        @items = []
        if data
          eof = data.length
          
# line 31 "lib/vorax/parser/grammars/declare.rb"
class << self
	attr_accessor :_declare_actions
	private :_declare_actions, :_declare_actions=
end
self._declare_actions = [
	0, 1, 2, 1, 4, 1, 5, 1, 
	7, 1, 9, 1, 10, 1, 11, 1, 
	18, 1, 19, 1, 20, 1, 21, 1, 
	29, 1, 30, 1, 31, 1, 32, 1, 
	33, 1, 34, 1, 35, 2, 0, 22, 
	2, 0, 23, 2, 0, 24, 2, 0, 
	25, 2, 0, 28, 2, 3, 1, 2, 
	11, 5, 2, 11, 12, 2, 11, 13, 
	2, 11, 14, 2, 11, 15, 2, 11, 
	16, 2, 11, 17, 3, 2, 0, 26, 
	3, 2, 0, 27, 3, 6, 0, 28, 
	3, 8, 0, 28, 3, 11, 3, 1, 
	3, 11, 4, 5, 4, 11, 3, 1, 
	17
]

class << self
	attr_accessor :_declare_key_offsets
	private :_declare_key_offsets, :_declare_key_offsets=
end
self._declare_key_offsets = [
	0, 1, 26, 27, 31, 33, 35, 37, 
	39, 41, 43, 51, 52, 60, 61, 62, 
	63, 64, 65, 67, 77, 102, 103, 107, 
	109, 111, 113, 115, 117, 119, 127, 128, 
	136, 137, 138, 139, 140, 141, 143, 153, 
	167, 168, 169, 170, 172, 188, 204, 220, 
	234, 235, 236, 237, 238, 240, 256, 272, 
	288, 304, 318, 343, 344, 349, 356, 357, 
	358, 359, 360, 362, 364, 369, 370, 371, 
	372, 373, 375, 389, 390, 391, 392, 393, 
	395, 411, 427, 443, 459, 468, 484, 500, 
	516, 532, 548, 564, 580, 596, 612, 628, 
	644, 660, 676, 692, 708, 724, 742, 758, 
	774, 790, 806, 822, 838, 854, 870, 886, 
	902, 918, 934, 950, 966, 982, 998, 1014, 
	1030, 1039, 1055, 1071, 1087, 1103, 1119, 1135, 
	1149, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 
	1190, 1208, 1224, 1240, 1256, 1270, 1271, 1272, 
	1273, 1274, 1276, 1292, 1308, 1324, 1340, 1356, 
	1372, 1386, 1411, 1412, 1413, 1414, 1415, 1416, 
	1418, 1427, 1443, 1459, 1473, 1498, 1499, 1504, 
	1511, 1512, 1513, 1514, 1515, 1517, 1519, 1524, 
	1549, 1550, 1554, 1556, 1558, 1560, 1562, 1564, 
	1566, 1574, 1575, 1583, 1584, 1585, 1586, 1587, 
	1588, 1590, 1600, 1614, 1615, 1616, 1617, 1618, 
	1620, 1636, 1652, 1668, 1684, 1693, 1709, 1725, 
	1741, 1757, 1773, 1789, 1805, 1821, 1837, 1853, 
	1869, 1885, 1901, 1917, 1933, 1949, 1967, 1983, 
	1999, 2015, 2031, 2047, 2063, 2079, 2095, 2111, 
	2127, 2143, 2166, 2167, 2172, 2174, 2174, 2176, 
	2177, 2187, 2198, 2209, 2222, 2235, 2248, 2261, 
	2276, 2289, 2302, 2315, 2328, 2341, 2354, 2370, 
	2372, 2372, 2374, 2375, 2385, 2396, 2407, 2420, 
	2433, 2446, 2459, 2472, 2485, 2498, 2511, 2524, 
	2537, 2550, 2563, 2576, 2589, 2602, 2615, 2628, 
	2641, 2654, 2667, 2682, 2695, 2708, 2721, 2734, 
	2747, 2760, 2773, 2786, 2799, 2812, 2825, 2838, 
	2851, 2864, 2877, 2890, 2903, 2916, 2929, 2942, 
	2955, 2968, 2981, 2991, 3004, 3017, 3030, 3043, 
	3056, 3069, 3082, 3097, 3110, 3123, 3136, 3149, 
	3162, 3175, 3188, 3201, 3214, 3227, 3240, 3254, 
	3255, 3256, 3257, 3258, 3274, 3279, 3295, 3300, 
	3316, 3332, 3332, 3341, 3352, 3363, 3374, 3385, 
	3396, 3407, 3418, 3429, 3440, 3451, 3462, 3473, 
	3484, 3495, 3506, 3517, 3528, 3539, 3550, 3561, 
	3574, 3585, 3596, 3607, 3618, 3629, 3640, 3651, 
	3662, 3673, 3684, 3695, 3711, 3716, 3716, 3725, 
	3736, 3747, 3758, 3769, 3780, 3791, 3802, 3813, 
	3824, 3835, 3846, 3857, 3868, 3879, 3890, 3901, 
	3912, 3923, 3934, 3945, 3958, 3969, 3980, 3991, 
	4002, 4013, 4024, 4035, 4046, 4057, 4068, 4079, 
	4095, 4097, 4097, 4099, 4100, 4110, 4121, 4132, 
	4145, 4158, 4171, 4184, 4197, 4210, 4223, 4236, 
	4249, 4262, 4275, 4288, 4301, 4314, 4327, 4340, 
	4353, 4366, 4379, 4392, 4407, 4420, 4433, 4446, 
	4459, 4472, 4485, 4498, 4511, 4524, 4537
]

class << self
	attr_accessor :_declare_trans_keys
	private :_declare_trans_keys, :_declare_trans_keys=
end
self._declare_trans_keys = [
	34, 32, 34, 45, 47, 66, 67, 69, 
	70, 80, 84, 95, 98, 99, 101, 102, 
	112, 116, 9, 13, 35, 36, 65, 90, 
	97, 122, 34, 82, 84, 114, 116, 79, 
	111, 87, 119, 84, 116, 89, 121, 80, 
	112, 69, 101, 34, 95, 35, 36, 65, 
	90, 97, 122, 34, 34, 95, 35, 36, 
	65, 90, 97, 122, 34, 45, 10, 42, 
	42, 42, 47, 46, 95, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 34, 45, 
	47, 66, 67, 69, 70, 80, 84, 95, 
	98, 99, 101, 102, 112, 116, 9, 13, 
	35, 36, 65, 90, 97, 122, 34, 82, 
	84, 114, 116, 79, 111, 87, 119, 84, 
	116, 89, 121, 80, 112, 69, 101, 34, 
	95, 35, 36, 65, 90, 97, 122, 34, 
	34, 95, 35, 36, 65, 90, 97, 122, 
	34, 45, 10, 42, 42, 42, 47, 46, 
	95, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 45, 47, 95, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 39, 
	10, 42, 42, 47, 32, 45, 47, 71, 
	95, 103, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 73, 
	95, 105, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 78, 
	95, 110, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 95, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 45, 10, 42, 42, 42, 47, 
	32, 45, 47, 82, 95, 114, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 83, 95, 115, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 79, 95, 111, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 82, 95, 114, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 34, 
	45, 47, 66, 67, 69, 70, 80, 84, 
	95, 98, 99, 101, 102, 112, 116, 9, 
	13, 35, 36, 65, 90, 97, 122, 34, 
	32, 45, 47, 9, 13, 32, 45, 47, 
	73, 105, 9, 13, 45, 10, 42, 42, 
	42, 47, 83, 115, 32, 45, 47, 9, 
	13, 45, 10, 42, 42, 42, 47, 32, 
	45, 47, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 45, 10, 42, 
	42, 42, 47, 32, 45, 47, 69, 95, 
	101, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 71, 95, 
	103, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 73, 95, 
	105, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 78, 95, 
	110, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 95, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 85, 
	95, 117, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 82, 
	95, 114, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 83, 
	95, 115, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 79, 
	95, 111, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 82, 
	95, 114, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 88, 
	95, 120, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 67, 
	95, 99, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 69, 
	95, 101, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 80, 
	95, 112, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 84, 
	95, 116, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 73, 
	95, 105, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 79, 
	95, 111, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 85, 
	95, 117, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 78, 
	95, 110, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 67, 
	95, 99, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 82, 
	95, 114, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 65, 
	79, 95, 97, 111, 9, 13, 35, 36, 
	48, 57, 66, 90, 98, 122, 32, 45, 
	47, 71, 95, 103, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 77, 95, 109, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 65, 95, 97, 9, 13, 35, 36, 
	48, 57, 66, 90, 98, 122, 32, 45, 
	47, 67, 95, 99, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 69, 95, 101, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 68, 95, 100, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 85, 95, 117, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 82, 95, 114, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 69, 95, 101, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 89, 95, 121, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 80, 95, 112, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 67, 95, 99, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 69, 95, 101, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 80, 95, 112, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 84, 95, 116, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 73, 95, 105, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 79, 95, 111, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 78, 95, 110, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 95, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 78, 95, 110, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 67, 95, 99, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 84, 95, 116, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 73, 95, 105, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 79, 95, 111, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 78, 95, 110, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 34, 45, 
	47, 66, 67, 69, 70, 80, 84, 95, 
	98, 99, 101, 102, 112, 116, 9, 13, 
	35, 36, 65, 90, 97, 122, 34, 45, 
	10, 42, 42, 42, 47, 95, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 65, 79, 95, 97, 111, 9, 13, 
	35, 36, 48, 57, 66, 90, 98, 122, 
	32, 45, 47, 71, 95, 103, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 77, 95, 109, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 65, 95, 97, 9, 13, 
	35, 36, 48, 57, 66, 90, 98, 122, 
	32, 45, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 45, 10, 
	42, 42, 42, 47, 32, 45, 47, 67, 
	95, 99, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 69, 
	95, 101, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 68, 
	95, 100, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 85, 
	95, 117, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 82, 
	95, 114, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 69, 
	95, 101, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 95, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 34, 45, 47, 66, 67, 
	69, 70, 80, 84, 95, 98, 99, 101, 
	102, 112, 116, 9, 13, 35, 36, 65, 
	90, 97, 122, 34, 45, 10, 42, 42, 
	42, 47, 95, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 80, 95, 
	112, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 69, 95, 
	101, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 34, 45, 47, 66, 67, 69, 
	70, 80, 84, 95, 98, 99, 101, 102, 
	112, 116, 9, 13, 35, 36, 65, 90, 
	97, 122, 34, 32, 45, 47, 9, 13, 
	32, 45, 47, 73, 105, 9, 13, 45, 
	10, 42, 42, 42, 47, 83, 115, 32, 
	45, 47, 9, 13, 32, 34, 45, 47, 
	66, 67, 69, 70, 80, 84, 95, 98, 
	99, 101, 102, 112, 116, 9, 13, 35, 
	36, 65, 90, 97, 122, 34, 82, 84, 
	114, 116, 79, 111, 87, 119, 84, 116, 
	89, 121, 80, 112, 69, 101, 34, 95, 
	35, 36, 65, 90, 97, 122, 34, 34, 
	95, 35, 36, 65, 90, 97, 122, 34, 
	45, 10, 42, 42, 42, 47, 46, 95, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 45, 10, 
	42, 42, 42, 47, 32, 45, 47, 69, 
	95, 101, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 71, 
	95, 103, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 73, 
	95, 105, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 78, 
	95, 110, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 95, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	85, 95, 117, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	82, 95, 114, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	83, 95, 115, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	79, 95, 111, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	82, 95, 114, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	88, 95, 120, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	67, 95, 99, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	69, 95, 101, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	80, 95, 112, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	84, 95, 116, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	73, 95, 105, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	79, 95, 111, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	85, 95, 117, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	78, 95, 110, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	67, 95, 99, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	82, 95, 114, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	65, 79, 95, 97, 111, 9, 13, 35, 
	36, 48, 57, 66, 90, 98, 122, 32, 
	45, 47, 71, 95, 103, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 77, 95, 109, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 65, 95, 97, 9, 13, 35, 
	36, 48, 57, 66, 90, 98, 122, 32, 
	45, 47, 67, 95, 99, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 69, 95, 101, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 68, 95, 100, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 85, 95, 117, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 82, 95, 114, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 69, 95, 101, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 89, 95, 121, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 80, 95, 112, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 34, 
	39, 45, 47, 66, 67, 69, 70, 80, 
	84, 95, 98, 99, 101, 102, 112, 116, 
	35, 36, 65, 90, 97, 122, 34, 32, 
	45, 47, 9, 13, 37, 46, 37, 46, 
	37, 37, 95, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 95, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	95, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 69, 95, 101, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	71, 95, 103, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 73, 95, 105, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 78, 95, 110, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 79, 
	85, 95, 111, 117, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 78, 95, 
	110, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 83, 95, 115, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	84, 95, 116, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 65, 95, 97, 
	35, 36, 48, 57, 66, 90, 98, 122, 
	37, 46, 78, 95, 110, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 84, 
	95, 116, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 37, 45, 46, 47, 95, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 37, 46, 37, 37, 
	95, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 95, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 95, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 69, 95, 101, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 71, 95, 
	103, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 73, 95, 105, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	78, 95, 110, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 85, 95, 117, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 82, 95, 114, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 83, 
	95, 115, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 79, 95, 111, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 82, 95, 114, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 88, 95, 
	120, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	69, 95, 101, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 80, 95, 112, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 84, 95, 116, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 73, 
	95, 105, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 79, 95, 111, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 85, 95, 117, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 78, 95, 
	110, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	82, 95, 114, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 65, 79, 95, 
	97, 111, 35, 36, 48, 57, 66, 90, 
	98, 122, 37, 46, 71, 95, 103, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 77, 95, 109, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 65, 95, 
	97, 35, 36, 48, 57, 66, 90, 98, 
	122, 37, 46, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	69, 95, 101, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 68, 95, 100, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 85, 95, 117, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 82, 
	95, 114, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 69, 95, 101, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 89, 95, 121, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 80, 95, 
	112, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 82, 95, 114, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	83, 95, 115, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 79, 95, 111, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 82, 95, 114, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 88, 
	95, 120, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 67, 95, 99, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 69, 95, 101, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 80, 95, 
	112, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 84, 95, 116, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	73, 95, 105, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 79, 95, 111, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 78, 95, 110, 35, 36, 48, 
	57, 65, 90, 97, 122, 46, 95, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 85, 95, 117, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 78, 95, 
	110, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	84, 95, 116, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 73, 95, 105, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 79, 95, 111, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 82, 
	95, 114, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 65, 79, 95, 97, 
	111, 35, 36, 48, 57, 66, 90, 98, 
	122, 37, 46, 71, 95, 103, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	77, 95, 109, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 65, 95, 97, 
	35, 36, 48, 57, 66, 90, 98, 122, 
	37, 46, 67, 95, 99, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 69, 
	95, 101, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 68, 95, 100, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 85, 95, 117, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 82, 95, 
	114, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 69, 95, 101, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	89, 95, 121, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 80, 95, 112, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 39, 39, 
	45, 42, 32, 45, 47, 69, 95, 101, 
	9, 13, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 45, 47, 9, 13, 32, 
	45, 47, 85, 95, 117, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 9, 13, 32, 45, 47, 88, 
	95, 120, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 45, 47, 85, 
	95, 117, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 95, 35, 36, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	71, 95, 103, 35, 36, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 35, 36, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 35, 36, 48, 57, 65, 90, 97, 
	122, 85, 95, 117, 35, 36, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 35, 
	36, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 35, 36, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 35, 36, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	88, 95, 120, 35, 36, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 35, 36, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 35, 36, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 35, 
	36, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 35, 36, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 35, 36, 48, 
	57, 65, 90, 97, 122, 85, 95, 117, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 35, 36, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 35, 36, 48, 57, 65, 90, 97, 
	122, 65, 79, 95, 97, 111, 35, 36, 
	48, 57, 66, 90, 98, 122, 71, 95, 
	103, 35, 36, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 35, 36, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 35, 
	36, 48, 57, 66, 90, 98, 122, 67, 
	95, 99, 35, 36, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 35, 36, 48, 
	57, 65, 90, 97, 122, 68, 95, 100, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	85, 95, 117, 35, 36, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 35, 36, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 35, 36, 48, 57, 65, 90, 97, 
	122, 89, 95, 121, 35, 36, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 82, 95, 114, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 9, 13, 95, 35, 36, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	71, 95, 103, 35, 36, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 35, 36, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 35, 36, 48, 57, 65, 90, 97, 
	122, 85, 95, 117, 35, 36, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 35, 
	36, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 35, 36, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 35, 36, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	88, 95, 120, 35, 36, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 35, 36, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 35, 36, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 35, 
	36, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 35, 36, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 35, 36, 48, 
	57, 65, 90, 97, 122, 85, 95, 117, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 35, 36, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 35, 36, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 35, 36, 48, 57, 65, 90, 97, 
	122, 65, 79, 95, 97, 111, 35, 36, 
	48, 57, 66, 90, 98, 122, 71, 95, 
	103, 35, 36, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 35, 36, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 35, 
	36, 48, 57, 66, 90, 98, 122, 67, 
	95, 99, 35, 36, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 35, 36, 48, 
	57, 65, 90, 97, 122, 68, 95, 100, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	85, 95, 117, 35, 36, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 35, 36, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 35, 36, 48, 57, 65, 90, 97, 
	122, 89, 95, 121, 35, 36, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 89, 95, 121, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 37, 46, 37, 37, 95, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	95, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 95, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 69, 95, 
	101, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 71, 95, 103, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	73, 95, 105, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 78, 95, 110, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 85, 95, 117, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 82, 
	95, 114, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 83, 95, 115, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 79, 95, 111, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 82, 95, 
	114, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 88, 95, 120, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	67, 95, 99, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 69, 95, 101, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 80, 95, 112, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 84, 
	95, 116, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 73, 95, 105, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 79, 95, 111, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 85, 95, 
	117, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 78, 95, 110, 35, 36, 
	48, 57, 65, 90, 97, 122, 37, 46, 
	67, 95, 99, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 82, 95, 114, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 65, 79, 95, 97, 111, 35, 
	36, 48, 57, 66, 90, 98, 122, 37, 
	46, 71, 95, 103, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 77, 95, 
	109, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 65, 95, 97, 35, 36, 
	48, 57, 66, 90, 98, 122, 37, 46, 
	67, 95, 99, 35, 36, 48, 57, 65, 
	90, 97, 122, 37, 46, 69, 95, 101, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	37, 46, 68, 95, 100, 35, 36, 48, 
	57, 65, 90, 97, 122, 37, 46, 85, 
	95, 117, 35, 36, 48, 57, 65, 90, 
	97, 122, 37, 46, 82, 95, 114, 35, 
	36, 48, 57, 65, 90, 97, 122, 37, 
	46, 69, 95, 101, 35, 36, 48, 57, 
	65, 90, 97, 122, 37, 46, 89, 95, 
	121, 35, 36, 48, 57, 65, 90, 97, 
	122, 37, 46, 80, 95, 112, 35, 36, 
	48, 57, 65, 90, 97, 122, 0
]

class << self
	attr_accessor :_declare_single_lengths
	private :_declare_single_lengths, :_declare_single_lengths=
end
self._declare_single_lengths = [
	1, 17, 1, 4, 2, 2, 2, 2, 
	2, 2, 2, 1, 2, 1, 1, 1, 
	1, 1, 2, 2, 17, 1, 4, 2, 
	2, 2, 2, 2, 2, 2, 1, 2, 
	1, 1, 1, 1, 1, 2, 2, 4, 
	1, 1, 1, 2, 6, 6, 6, 4, 
	1, 1, 1, 1, 2, 6, 6, 6, 
	6, 4, 17, 1, 3, 5, 1, 1, 
	1, 1, 2, 2, 3, 1, 1, 1, 
	1, 2, 4, 1, 1, 1, 1, 2, 
	6, 6, 6, 6, 1, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 8, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	1, 6, 6, 6, 6, 6, 6, 4, 
	17, 1, 1, 1, 1, 1, 2, 1, 
	8, 6, 6, 6, 4, 1, 1, 1, 
	1, 2, 6, 6, 6, 6, 6, 6, 
	4, 17, 1, 1, 1, 1, 1, 2, 
	1, 6, 6, 4, 17, 1, 3, 5, 
	1, 1, 1, 1, 2, 2, 3, 17, 
	1, 4, 2, 2, 2, 2, 2, 2, 
	2, 1, 2, 1, 1, 1, 1, 1, 
	2, 2, 4, 1, 1, 1, 1, 2, 
	6, 6, 6, 6, 1, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 8, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 17, 1, 3, 2, 0, 2, 1, 
	2, 3, 3, 5, 5, 5, 5, 7, 
	5, 5, 5, 5, 5, 5, 6, 2, 
	0, 2, 1, 2, 3, 3, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 7, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 2, 5, 5, 5, 5, 5, 
	5, 5, 7, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 4, 1, 
	1, 1, 1, 6, 3, 6, 3, 6, 
	6, 0, 1, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 5, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 6, 3, 0, 1, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 6, 
	2, 0, 2, 1, 2, 3, 3, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 7, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5
]

class << self
	attr_accessor :_declare_range_lengths
	private :_declare_range_lengths, :_declare_range_lengths=
end
self._declare_range_lengths = [
	0, 4, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 0, 3, 0, 0, 0, 
	0, 0, 0, 4, 4, 0, 0, 0, 
	0, 0, 0, 0, 0, 3, 0, 3, 
	0, 0, 0, 0, 0, 0, 4, 5, 
	0, 0, 0, 0, 5, 5, 5, 5, 
	0, 0, 0, 0, 0, 5, 5, 5, 
	5, 5, 4, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 5, 0, 0, 0, 0, 0, 
	5, 5, 5, 5, 4, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	4, 5, 5, 5, 5, 5, 5, 5, 
	4, 0, 0, 0, 0, 0, 0, 4, 
	5, 5, 5, 5, 5, 0, 0, 0, 
	0, 0, 5, 5, 5, 5, 5, 5, 
	5, 4, 0, 0, 0, 0, 0, 0, 
	4, 5, 5, 5, 4, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 1, 4, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 0, 3, 0, 0, 0, 0, 0, 
	0, 4, 5, 0, 0, 0, 0, 0, 
	5, 5, 5, 5, 4, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 3, 0, 1, 0, 0, 0, 0, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 5, 0, 
	0, 0, 0, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 5, 0, 
	0, 0, 0, 5, 1, 5, 1, 5, 
	5, 0, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 5, 1, 0, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 5, 
	0, 0, 0, 0, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4
]

class << self
	attr_accessor :_declare_index_offsets
	private :_declare_index_offsets, :_declare_index_offsets=
end
self._declare_index_offsets = [
	0, 2, 24, 26, 31, 34, 37, 40, 
	43, 46, 49, 55, 57, 63, 65, 67, 
	69, 71, 73, 76, 83, 105, 107, 112, 
	115, 118, 121, 124, 127, 130, 136, 138, 
	144, 146, 148, 150, 152, 154, 157, 164, 
	174, 176, 178, 180, 183, 195, 207, 219, 
	229, 231, 233, 235, 237, 240, 252, 264, 
	276, 288, 298, 320, 322, 327, 334, 336, 
	338, 340, 342, 345, 348, 353, 355, 357, 
	359, 361, 364, 374, 376, 378, 380, 382, 
	385, 397, 409, 421, 433, 439, 451, 463, 
	475, 487, 499, 511, 523, 535, 547, 559, 
	571, 583, 595, 607, 619, 631, 645, 657, 
	669, 681, 693, 705, 717, 729, 741, 753, 
	765, 777, 789, 801, 813, 825, 837, 849, 
	861, 867, 879, 891, 903, 915, 927, 939, 
	949, 971, 973, 975, 977, 979, 981, 984, 
	990, 1004, 1016, 1028, 1040, 1050, 1052, 1054, 
	1056, 1058, 1061, 1073, 1085, 1097, 1109, 1121, 
	1133, 1143, 1165, 1167, 1169, 1171, 1173, 1175, 
	1178, 1184, 1196, 1208, 1218, 1240, 1242, 1247, 
	1254, 1256, 1258, 1260, 1262, 1265, 1268, 1273, 
	1295, 1297, 1302, 1305, 1308, 1311, 1314, 1317, 
	1320, 1326, 1328, 1334, 1336, 1338, 1340, 1342, 
	1344, 1347, 1354, 1364, 1366, 1368, 1370, 1372, 
	1375, 1387, 1399, 1411, 1423, 1429, 1441, 1453, 
	1465, 1477, 1489, 1501, 1513, 1525, 1537, 1549, 
	1561, 1573, 1585, 1597, 1609, 1621, 1635, 1647, 
	1659, 1671, 1683, 1695, 1707, 1719, 1731, 1743, 
	1755, 1767, 1788, 1790, 1795, 1798, 1799, 1802, 
	1804, 1811, 1819, 1827, 1837, 1847, 1857, 1867, 
	1879, 1889, 1899, 1909, 1919, 1929, 1939, 1951, 
	1954, 1955, 1958, 1960, 1967, 1975, 1983, 1993, 
	2003, 2013, 2023, 2033, 2043, 2053, 2063, 2073, 
	2083, 2093, 2103, 2113, 2123, 2133, 2143, 2153, 
	2163, 2173, 2183, 2195, 2205, 2215, 2225, 2235, 
	2245, 2255, 2265, 2275, 2285, 2295, 2305, 2315, 
	2325, 2335, 2345, 2355, 2365, 2375, 2385, 2395, 
	2405, 2415, 2425, 2432, 2442, 2452, 2462, 2472, 
	2482, 2492, 2502, 2514, 2524, 2534, 2544, 2554, 
	2564, 2574, 2584, 2594, 2604, 2614, 2624, 2634, 
	2636, 2638, 2640, 2642, 2654, 2659, 2671, 2676, 
	2688, 2700, 2701, 2707, 2715, 2723, 2731, 2739, 
	2747, 2755, 2763, 2771, 2779, 2787, 2795, 2803, 
	2811, 2819, 2827, 2835, 2843, 2851, 2859, 2867, 
	2877, 2885, 2893, 2901, 2909, 2917, 2925, 2933, 
	2941, 2949, 2957, 2965, 2977, 2982, 2983, 2989, 
	2997, 3005, 3013, 3021, 3029, 3037, 3045, 3053, 
	3061, 3069, 3077, 3085, 3093, 3101, 3109, 3117, 
	3125, 3133, 3141, 3149, 3159, 3167, 3175, 3183, 
	3191, 3199, 3207, 3215, 3223, 3231, 3239, 3247, 
	3259, 3262, 3263, 3266, 3268, 3275, 3283, 3291, 
	3301, 3311, 3321, 3331, 3341, 3351, 3361, 3371, 
	3381, 3391, 3401, 3411, 3421, 3431, 3441, 3451, 
	3461, 3471, 3481, 3491, 3503, 3513, 3523, 3533, 
	3543, 3553, 3563, 3573, 3583, 3593, 3603
]

class << self
	attr_accessor :_declare_indicies
	private :_declare_indicies, :_declare_indicies=
end
self._declare_indicies = [
	2, 1, 4, 5, 7, 8, 9, 10, 
	11, 12, 13, 14, 6, 9, 10, 11, 
	12, 13, 14, 4, 6, 6, 6, 3, 
	16, 15, 18, 19, 18, 19, 17, 20, 
	20, 17, 21, 21, 17, 19, 19, 17, 
	22, 22, 17, 23, 23, 17, 24, 24, 
	17, 25, 26, 26, 26, 26, 17, 27, 
	25, 28, 29, 29, 29, 29, 17, 30, 
	28, 31, 3, 4, 31, 32, 3, 33, 
	32, 33, 4, 32, 35, 34, 34, 34, 
	34, 34, 17, 36, 37, 39, 40, 41, 
	42, 43, 44, 45, 46, 38, 41, 42, 
	43, 44, 45, 46, 36, 38, 38, 38, 
	17, 48, 47, 49, 50, 49, 50, 17, 
	51, 51, 17, 52, 52, 17, 50, 50, 
	17, 53, 53, 17, 54, 54, 17, 55, 
	55, 17, 56, 57, 57, 57, 57, 17, 
	58, 56, 59, 60, 60, 60, 60, 17, 
	61, 59, 62, 17, 36, 62, 63, 17, 
	64, 63, 64, 36, 63, 66, 65, 65, 
	65, 65, 65, 17, 67, 69, 70, 68, 
	67, 68, 68, 68, 68, 0, 72, 71, 
	74, 73, 76, 75, 76, 74, 75, 67, 
	69, 70, 77, 68, 77, 67, 68, 68, 
	68, 68, 0, 67, 69, 70, 78, 68, 
	78, 67, 68, 68, 68, 68, 0, 67, 
	69, 70, 79, 68, 79, 67, 68, 68, 
	68, 68, 0, 80, 81, 82, 68, 80, 
	68, 68, 68, 68, 0, 83, 3, 80, 
	83, 84, 3, 85, 84, 85, 80, 84, 
	67, 69, 70, 86, 68, 86, 67, 68, 
	68, 68, 68, 0, 67, 69, 70, 87, 
	68, 87, 67, 68, 68, 68, 68, 0, 
	67, 69, 70, 88, 68, 88, 67, 68, 
	68, 68, 68, 0, 67, 69, 70, 89, 
	68, 89, 67, 68, 68, 68, 68, 0, 
	90, 91, 92, 68, 90, 68, 68, 68, 
	68, 0, 90, 93, 91, 92, 95, 96, 
	97, 98, 99, 100, 94, 95, 96, 97, 
	98, 99, 100, 90, 94, 94, 94, 0, 
	102, 101, 103, 104, 105, 103, 0, 106, 
	107, 108, 109, 109, 106, 0, 110, 0, 
	106, 110, 111, 0, 112, 111, 112, 106, 
	111, 113, 113, 0, 114, 115, 116, 114, 
	0, 117, 3, 114, 117, 118, 3, 119, 
	118, 119, 114, 118, 103, 104, 105, 120, 
	103, 120, 120, 120, 120, 0, 121, 0, 
	90, 121, 122, 0, 123, 122, 123, 90, 
	122, 103, 104, 105, 124, 120, 124, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	125, 120, 125, 103, 120, 120, 120, 120, 
	0, 103, 104, 105, 126, 120, 126, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	127, 120, 127, 103, 120, 120, 120, 120, 
	0, 120, 120, 120, 120, 120, 0, 103, 
	104, 105, 128, 120, 128, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 129, 120, 
	129, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 130, 120, 130, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 131, 120, 
	131, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 127, 120, 127, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 132, 120, 
	132, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 133, 120, 133, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 134, 120, 
	134, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 135, 120, 135, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 136, 120, 
	136, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 137, 120, 137, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 126, 120, 
	126, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 138, 120, 138, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 139, 120, 
	139, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 135, 120, 135, 103, 120, 120, 
	120, 120, 0, 103, 104, 105, 140, 120, 
	140, 103, 120, 120, 120, 120, 0, 103, 
	104, 105, 141, 142, 120, 141, 142, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	143, 120, 143, 103, 120, 120, 120, 120, 
	0, 103, 104, 105, 144, 120, 144, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	127, 120, 127, 103, 120, 120, 120, 120, 
	0, 103, 104, 105, 145, 120, 145, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	146, 120, 146, 103, 120, 120, 120, 120, 
	0, 103, 104, 105, 147, 120, 147, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	148, 120, 148, 103, 120, 120, 120, 120, 
	0, 103, 104, 105, 149, 120, 149, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	127, 120, 127, 103, 120, 120, 120, 120, 
	0, 103, 104, 105, 150, 120, 150, 103, 
	120, 120, 120, 120, 0, 103, 104, 105, 
	149, 120, 149, 103, 120, 120, 120, 120, 
	0, 67, 69, 70, 151, 68, 151, 67, 
	68, 68, 68, 68, 0, 67, 69, 70, 
	152, 68, 152, 67, 68, 68, 68, 68, 
	0, 67, 69, 70, 153, 68, 153, 67, 
	68, 68, 68, 68, 0, 67, 69, 70, 
	154, 68, 154, 67, 68, 68, 68, 68, 
	0, 67, 69, 70, 155, 68, 155, 67, 
	68, 68, 68, 68, 0, 67, 69, 70, 
	156, 68, 156, 67, 68, 68, 68, 68, 
	0, 67, 69, 70, 157, 68, 157, 67, 
	68, 68, 68, 68, 0, 68, 68, 68, 
	68, 68, 0, 67, 69, 70, 158, 68, 
	158, 67, 68, 68, 68, 68, 0, 67, 
	69, 70, 159, 68, 159, 67, 68, 68, 
	68, 68, 0, 67, 69, 70, 160, 68, 
	160, 67, 68, 68, 68, 68, 0, 67, 
	69, 70, 161, 68, 161, 67, 68, 68, 
	68, 68, 0, 67, 69, 70, 162, 68, 
	162, 67, 68, 68, 68, 68, 0, 67, 
	69, 70, 163, 68, 163, 67, 68, 68, 
	68, 68, 0, 164, 165, 166, 68, 164, 
	68, 68, 68, 68, 0, 164, 167, 165, 
	166, 169, 170, 171, 172, 173, 174, 168, 
	169, 170, 171, 172, 173, 174, 164, 168, 
	168, 168, 0, 176, 175, 177, 0, 164, 
	177, 178, 0, 179, 178, 179, 164, 178, 
	181, 181, 181, 181, 181, 180, 67, 69, 
	70, 182, 183, 68, 182, 183, 67, 68, 
	68, 68, 68, 0, 67, 69, 70, 184, 
	68, 184, 67, 68, 68, 68, 68, 0, 
	67, 69, 70, 185, 68, 185, 67, 68, 
	68, 68, 68, 0, 67, 69, 70, 186, 
	68, 186, 67, 68, 68, 68, 68, 0, 
	187, 188, 189, 68, 187, 68, 68, 68, 
	68, 0, 190, 3, 187, 190, 191, 3, 
	192, 191, 192, 187, 191, 67, 69, 70, 
	193, 68, 193, 67, 68, 68, 68, 68, 
	0, 67, 69, 70, 194, 68, 194, 67, 
	68, 68, 68, 68, 0, 67, 69, 70, 
	195, 68, 195, 67, 68, 68, 68, 68, 
	0, 67, 69, 70, 196, 68, 196, 67, 
	68, 68, 68, 68, 0, 67, 69, 70, 
	197, 68, 197, 67, 68, 68, 68, 68, 
	0, 67, 69, 70, 198, 68, 198, 67, 
	68, 68, 68, 68, 0, 199, 200, 201, 
	68, 199, 68, 68, 68, 68, 0, 199, 
	202, 200, 201, 204, 205, 206, 207, 208, 
	209, 203, 204, 205, 206, 207, 208, 209, 
	199, 203, 203, 203, 0, 211, 210, 212, 
	0, 199, 212, 213, 0, 214, 213, 214, 
	199, 213, 216, 216, 216, 216, 216, 215, 
	67, 69, 70, 217, 68, 217, 67, 68, 
	68, 68, 68, 0, 67, 69, 70, 218, 
	68, 218, 67, 68, 68, 68, 68, 0, 
	219, 220, 221, 68, 219, 68, 68, 68, 
	68, 0, 219, 222, 220, 221, 224, 225, 
	226, 227, 228, 229, 223, 224, 225, 226, 
	227, 228, 229, 219, 223, 223, 223, 0, 
	231, 230, 232, 233, 234, 232, 0, 235, 
	236, 237, 238, 238, 235, 0, 239, 0, 
	235, 239, 240, 0, 241, 240, 241, 235, 
	240, 242, 242, 0, 243, 244, 245, 243, 
	0, 243, 246, 244, 245, 248, 249, 250, 
	251, 252, 253, 247, 248, 249, 250, 251, 
	252, 253, 243, 247, 247, 247, 0, 255, 
	254, 257, 258, 257, 258, 256, 259, 259, 
	256, 260, 260, 256, 258, 258, 256, 261, 
	261, 256, 262, 262, 256, 263, 263, 256, 
	264, 265, 265, 265, 265, 256, 266, 264, 
	267, 268, 268, 268, 268, 256, 269, 267, 
	270, 0, 243, 270, 271, 0, 272, 271, 
	272, 243, 271, 274, 273, 273, 273, 273, 
	273, 256, 232, 233, 234, 275, 232, 275, 
	275, 275, 275, 0, 276, 0, 219, 276, 
	277, 0, 278, 277, 278, 219, 277, 232, 
	233, 234, 279, 275, 279, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 280, 275, 
	280, 232, 275, 275, 275, 275, 0, 232, 
	233, 234, 281, 275, 281, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 282, 275, 
	282, 232, 275, 275, 275, 275, 0, 275, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	283, 275, 283, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 284, 275, 284, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	285, 275, 285, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 286, 275, 286, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	282, 275, 282, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 287, 275, 287, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	288, 275, 288, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 289, 275, 289, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	290, 275, 290, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 291, 275, 291, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	292, 275, 292, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 281, 275, 281, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	293, 275, 293, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 294, 275, 294, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	290, 275, 290, 232, 275, 275, 275, 275, 
	0, 232, 233, 234, 295, 275, 295, 232, 
	275, 275, 275, 275, 0, 232, 233, 234, 
	296, 297, 275, 296, 297, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 298, 275, 
	298, 232, 275, 275, 275, 275, 0, 232, 
	233, 234, 299, 275, 299, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 282, 275, 
	282, 232, 275, 275, 275, 275, 0, 232, 
	233, 234, 300, 275, 300, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 301, 275, 
	301, 232, 275, 275, 275, 275, 0, 232, 
	233, 234, 302, 275, 302, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 303, 275, 
	303, 232, 275, 275, 275, 275, 0, 232, 
	233, 234, 304, 275, 304, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 282, 275, 
	282, 232, 275, 275, 275, 275, 0, 232, 
	233, 234, 305, 275, 305, 232, 275, 275, 
	275, 275, 0, 232, 233, 234, 304, 275, 
	304, 232, 275, 275, 275, 275, 0, 307, 
	309, 310, 311, 312, 313, 314, 315, 316, 
	317, 308, 312, 313, 314, 315, 316, 317, 
	308, 308, 308, 306, 2, 1, 67, 69, 
	70, 67, 319, 321, 35, 320, 320, 321, 
	322, 320, 321, 320, 321, 29, 29, 29, 
	29, 29, 320, 321, 322, 26, 26, 26, 
	26, 26, 320, 321, 35, 34, 34, 34, 
	34, 34, 320, 321, 35, 323, 34, 323, 
	34, 34, 34, 34, 320, 321, 35, 324, 
	34, 324, 34, 34, 34, 34, 320, 321, 
	35, 325, 34, 325, 34, 34, 34, 34, 
	320, 321, 35, 326, 34, 326, 34, 34, 
	34, 34, 320, 321, 35, 327, 328, 34, 
	327, 328, 34, 34, 34, 34, 320, 321, 
	35, 329, 34, 329, 34, 34, 34, 34, 
	320, 321, 35, 330, 34, 330, 34, 34, 
	34, 34, 320, 321, 35, 331, 34, 331, 
	34, 34, 34, 34, 320, 321, 35, 332, 
	34, 332, 34, 34, 34, 34, 320, 321, 
	35, 333, 34, 333, 34, 34, 34, 34, 
	320, 321, 35, 334, 34, 334, 34, 34, 
	34, 34, 320, 335, 321, 336, 35, 337, 
	34, 335, 34, 34, 34, 34, 320, 339, 
	66, 338, 338, 339, 340, 338, 339, 338, 
	339, 60, 60, 60, 60, 60, 338, 339, 
	340, 57, 57, 57, 57, 57, 338, 339, 
	66, 65, 65, 65, 65, 65, 338, 339, 
	66, 341, 65, 341, 65, 65, 65, 65, 
	338, 339, 66, 342, 65, 342, 65, 65, 
	65, 65, 338, 339, 66, 343, 65, 343, 
	65, 65, 65, 65, 338, 339, 66, 344, 
	65, 344, 65, 65, 65, 65, 338, 339, 
	66, 345, 65, 345, 65, 65, 65, 65, 
	338, 339, 66, 346, 65, 346, 65, 65, 
	65, 65, 338, 339, 66, 347, 65, 347, 
	65, 65, 65, 65, 338, 339, 66, 348, 
	65, 348, 65, 65, 65, 65, 338, 339, 
	66, 344, 65, 344, 65, 65, 65, 65, 
	338, 339, 66, 349, 65, 349, 65, 65, 
	65, 65, 338, 339, 66, 350, 65, 350, 
	65, 65, 65, 65, 338, 339, 66, 351, 
	65, 351, 65, 65, 65, 65, 338, 339, 
	66, 352, 65, 352, 65, 65, 65, 65, 
	338, 339, 66, 353, 65, 353, 65, 65, 
	65, 65, 338, 339, 66, 354, 65, 354, 
	65, 65, 65, 65, 338, 339, 66, 343, 
	65, 343, 65, 65, 65, 65, 338, 339, 
	66, 355, 65, 355, 65, 65, 65, 65, 
	338, 339, 66, 356, 65, 356, 65, 65, 
	65, 65, 338, 339, 66, 352, 65, 352, 
	65, 65, 65, 65, 338, 339, 66, 357, 
	65, 357, 65, 65, 65, 65, 338, 339, 
	66, 358, 359, 65, 358, 359, 65, 65, 
	65, 65, 338, 339, 66, 360, 65, 360, 
	65, 65, 65, 65, 338, 339, 66, 361, 
	65, 361, 65, 65, 65, 65, 338, 339, 
	66, 344, 65, 344, 65, 65, 65, 65, 
	338, 339, 66, 362, 65, 362, 65, 65, 
	65, 65, 338, 339, 66, 363, 65, 363, 
	65, 65, 65, 65, 338, 339, 66, 364, 
	65, 364, 65, 65, 65, 65, 338, 339, 
	66, 365, 65, 365, 65, 65, 65, 65, 
	338, 339, 66, 366, 65, 366, 65, 65, 
	65, 65, 338, 339, 66, 344, 65, 344, 
	65, 65, 65, 65, 338, 339, 66, 367, 
	65, 367, 65, 65, 65, 65, 338, 339, 
	66, 366, 65, 366, 65, 65, 65, 65, 
	338, 321, 35, 368, 34, 368, 34, 34, 
	34, 34, 320, 321, 35, 369, 34, 369, 
	34, 34, 34, 34, 320, 321, 35, 370, 
	34, 370, 34, 34, 34, 34, 320, 321, 
	35, 326, 34, 326, 34, 34, 34, 34, 
	320, 321, 35, 371, 34, 371, 34, 34, 
	34, 34, 320, 321, 35, 372, 34, 372, 
	34, 34, 34, 34, 320, 321, 35, 373, 
	34, 373, 34, 34, 34, 34, 320, 321, 
	35, 374, 34, 374, 34, 34, 34, 34, 
	320, 321, 35, 375, 34, 375, 34, 34, 
	34, 34, 320, 321, 35, 376, 34, 376, 
	34, 34, 34, 34, 320, 321, 35, 377, 
	34, 377, 34, 34, 34, 34, 320, 321, 
	35, 378, 34, 378, 34, 34, 34, 34, 
	320, 35, 34, 34, 34, 34, 34, 379, 
	321, 35, 380, 34, 380, 34, 34, 34, 
	34, 320, 321, 35, 381, 34, 381, 34, 
	34, 34, 34, 320, 321, 35, 382, 34, 
	382, 34, 34, 34, 34, 320, 321, 35, 
	383, 34, 383, 34, 34, 34, 34, 320, 
	321, 35, 384, 34, 384, 34, 34, 34, 
	34, 320, 321, 35, 325, 34, 325, 34, 
	34, 34, 34, 320, 321, 35, 385, 34, 
	385, 34, 34, 34, 34, 320, 321, 35, 
	386, 387, 34, 386, 387, 34, 34, 34, 
	34, 320, 321, 35, 388, 34, 388, 34, 
	34, 34, 34, 320, 321, 35, 389, 34, 
	389, 34, 34, 34, 34, 320, 321, 35, 
	326, 34, 326, 34, 34, 34, 34, 320, 
	321, 35, 390, 34, 390, 34, 34, 34, 
	34, 320, 321, 35, 391, 34, 391, 34, 
	34, 34, 34, 320, 321, 35, 392, 34, 
	392, 34, 34, 34, 34, 320, 321, 35, 
	393, 34, 393, 34, 34, 34, 34, 320, 
	321, 35, 394, 34, 394, 34, 34, 34, 
	34, 320, 321, 35, 326, 34, 326, 34, 
	34, 34, 34, 320, 321, 35, 395, 34, 
	395, 34, 34, 34, 34, 320, 321, 35, 
	394, 34, 394, 34, 34, 34, 34, 320, 
	67, 69, 70, 68, 67, 68, 68, 68, 
	68, 318, 72, 71, 71, 396, 73, 318, 
	75, 318, 67, 69, 70, 397, 68, 397, 
	67, 68, 68, 68, 68, 318, 80, 81, 
	82, 80, 398, 67, 69, 70, 399, 68, 
	399, 67, 68, 68, 68, 68, 318, 114, 
	115, 116, 114, 400, 67, 69, 70, 401, 
	68, 401, 67, 68, 68, 68, 68, 318, 
	67, 69, 70, 402, 68, 402, 67, 68, 
	68, 68, 68, 318, 403, 181, 181, 181, 
	181, 181, 403, 404, 181, 404, 181, 181, 
	181, 181, 403, 405, 181, 405, 181, 181, 
	181, 181, 403, 406, 181, 406, 181, 181, 
	181, 181, 403, 407, 181, 407, 181, 181, 
	181, 181, 403, 408, 181, 408, 181, 181, 
	181, 181, 403, 409, 181, 409, 181, 181, 
	181, 181, 403, 410, 181, 410, 181, 181, 
	181, 181, 403, 411, 181, 411, 181, 181, 
	181, 181, 403, 407, 181, 407, 181, 181, 
	181, 181, 403, 412, 181, 412, 181, 181, 
	181, 181, 403, 413, 181, 413, 181, 181, 
	181, 181, 403, 414, 181, 414, 181, 181, 
	181, 181, 403, 415, 181, 415, 181, 181, 
	181, 181, 403, 416, 181, 416, 181, 181, 
	181, 181, 403, 417, 181, 417, 181, 181, 
	181, 181, 403, 406, 181, 406, 181, 181, 
	181, 181, 403, 418, 181, 418, 181, 181, 
	181, 181, 403, 419, 181, 419, 181, 181, 
	181, 181, 403, 415, 181, 415, 181, 181, 
	181, 181, 403, 420, 181, 420, 181, 181, 
	181, 181, 403, 421, 422, 181, 421, 422, 
	181, 181, 181, 181, 403, 423, 181, 423, 
	181, 181, 181, 181, 403, 424, 181, 424, 
	181, 181, 181, 181, 403, 407, 181, 407, 
	181, 181, 181, 181, 403, 425, 181, 425, 
	181, 181, 181, 181, 403, 426, 181, 426, 
	181, 181, 181, 181, 403, 427, 181, 427, 
	181, 181, 181, 181, 403, 428, 181, 428, 
	181, 181, 181, 181, 403, 429, 181, 429, 
	181, 181, 181, 181, 403, 407, 181, 407, 
	181, 181, 181, 181, 403, 430, 181, 430, 
	181, 181, 181, 181, 403, 429, 181, 429, 
	181, 181, 181, 181, 403, 67, 69, 70, 
	431, 68, 431, 67, 68, 68, 68, 68, 
	318, 187, 188, 189, 187, 432, 433, 216, 
	216, 216, 216, 216, 433, 434, 216, 434, 
	216, 216, 216, 216, 433, 435, 216, 435, 
	216, 216, 216, 216, 433, 436, 216, 436, 
	216, 216, 216, 216, 433, 437, 216, 437, 
	216, 216, 216, 216, 433, 438, 216, 438, 
	216, 216, 216, 216, 433, 439, 216, 439, 
	216, 216, 216, 216, 433, 440, 216, 440, 
	216, 216, 216, 216, 433, 441, 216, 441, 
	216, 216, 216, 216, 433, 437, 216, 437, 
	216, 216, 216, 216, 433, 442, 216, 442, 
	216, 216, 216, 216, 433, 443, 216, 443, 
	216, 216, 216, 216, 433, 444, 216, 444, 
	216, 216, 216, 216, 433, 445, 216, 445, 
	216, 216, 216, 216, 433, 446, 216, 446, 
	216, 216, 216, 216, 433, 447, 216, 447, 
	216, 216, 216, 216, 433, 436, 216, 436, 
	216, 216, 216, 216, 433, 448, 216, 448, 
	216, 216, 216, 216, 433, 449, 216, 449, 
	216, 216, 216, 216, 433, 445, 216, 445, 
	216, 216, 216, 216, 433, 450, 216, 450, 
	216, 216, 216, 216, 433, 451, 452, 216, 
	451, 452, 216, 216, 216, 216, 433, 453, 
	216, 453, 216, 216, 216, 216, 433, 454, 
	216, 454, 216, 216, 216, 216, 433, 437, 
	216, 437, 216, 216, 216, 216, 433, 455, 
	216, 455, 216, 216, 216, 216, 433, 456, 
	216, 456, 216, 216, 216, 216, 433, 457, 
	216, 457, 216, 216, 216, 216, 433, 458, 
	216, 458, 216, 216, 216, 216, 433, 459, 
	216, 459, 216, 216, 216, 216, 433, 437, 
	216, 437, 216, 216, 216, 216, 433, 460, 
	216, 460, 216, 216, 216, 216, 433, 459, 
	216, 459, 216, 216, 216, 216, 433, 67, 
	69, 70, 461, 68, 461, 67, 68, 68, 
	68, 68, 318, 463, 274, 462, 462, 463, 
	464, 462, 463, 462, 463, 268, 268, 268, 
	268, 268, 462, 463, 464, 265, 265, 265, 
	265, 265, 462, 463, 274, 273, 273, 273, 
	273, 273, 462, 463, 274, 465, 273, 465, 
	273, 273, 273, 273, 462, 463, 274, 466, 
	273, 466, 273, 273, 273, 273, 462, 463, 
	274, 467, 273, 467, 273, 273, 273, 273, 
	462, 463, 274, 468, 273, 468, 273, 273, 
	273, 273, 462, 463, 274, 469, 273, 469, 
	273, 273, 273, 273, 462, 463, 274, 470, 
	273, 470, 273, 273, 273, 273, 462, 463, 
	274, 471, 273, 471, 273, 273, 273, 273, 
	462, 463, 274, 472, 273, 472, 273, 273, 
	273, 273, 462, 463, 274, 468, 273, 468, 
	273, 273, 273, 273, 462, 463, 274, 473, 
	273, 473, 273, 273, 273, 273, 462, 463, 
	274, 474, 273, 474, 273, 273, 273, 273, 
	462, 463, 274, 475, 273, 475, 273, 273, 
	273, 273, 462, 463, 274, 476, 273, 476, 
	273, 273, 273, 273, 462, 463, 274, 477, 
	273, 477, 273, 273, 273, 273, 462, 463, 
	274, 478, 273, 478, 273, 273, 273, 273, 
	462, 463, 274, 467, 273, 467, 273, 273, 
	273, 273, 462, 463, 274, 479, 273, 479, 
	273, 273, 273, 273, 462, 463, 274, 480, 
	273, 480, 273, 273, 273, 273, 462, 463, 
	274, 476, 273, 476, 273, 273, 273, 273, 
	462, 463, 274, 481, 273, 481, 273, 273, 
	273, 273, 462, 463, 274, 482, 483, 273, 
	482, 483, 273, 273, 273, 273, 462, 463, 
	274, 484, 273, 484, 273, 273, 273, 273, 
	462, 463, 274, 485, 273, 485, 273, 273, 
	273, 273, 462, 463, 274, 468, 273, 468, 
	273, 273, 273, 273, 462, 463, 274, 486, 
	273, 486, 273, 273, 273, 273, 462, 463, 
	274, 487, 273, 487, 273, 273, 273, 273, 
	462, 463, 274, 488, 273, 488, 273, 273, 
	273, 273, 462, 463, 274, 489, 273, 489, 
	273, 273, 273, 273, 462, 463, 274, 490, 
	273, 490, 273, 273, 273, 273, 462, 463, 
	274, 468, 273, 468, 273, 273, 273, 273, 
	462, 463, 274, 491, 273, 491, 273, 273, 
	273, 273, 462, 463, 274, 490, 273, 490, 
	273, 273, 273, 273, 462, 0
]

class << self
	attr_accessor :_declare_trans_targs
	private :_declare_trans_targs, :_declare_trans_targs=
end
self._declare_trans_targs = [
	233, 0, 235, 233, 1, 2, 242, 14, 
	16, 243, 247, 298, 307, 313, 324, 2, 
	236, 233, 4, 7, 5, 6, 8, 9, 
	237, 11, 241, 238, 13, 240, 239, 15, 
	17, 18, 242, 10, 20, 21, 261, 33, 
	35, 262, 266, 271, 278, 281, 292, 21, 
	255, 23, 26, 24, 25, 27, 28, 256, 
	30, 260, 257, 32, 259, 258, 34, 36, 
	37, 261, 29, 1, 39, 14, 16, 40, 
	328, 41, 233, 42, 43, 45, 46, 47, 
	332, 48, 50, 49, 51, 52, 54, 55, 
	56, 57, 58, 75, 77, 59, 74, 80, 
	85, 90, 97, 100, 111, 59, 60, 61, 
	62, 64, 61, 62, 64, 67, 63, 65, 
	66, 68, 334, 69, 71, 70, 72, 73, 
	74, 76, 78, 79, 81, 82, 83, 84, 
	86, 87, 88, 89, 91, 92, 93, 94, 
	95, 96, 98, 99, 101, 102, 105, 103, 
	104, 106, 107, 108, 109, 110, 112, 114, 
	115, 116, 117, 118, 119, 120, 122, 123, 
	124, 125, 126, 127, 128, 130, 132, 129, 
	338, 339, 343, 348, 355, 358, 369, 129, 
	337, 131, 133, 134, 233, 338, 137, 146, 
	138, 139, 140, 372, 141, 143, 142, 144, 
	145, 147, 148, 149, 150, 151, 152, 153, 
	155, 157, 154, 374, 375, 379, 384, 391, 
	394, 405, 154, 373, 156, 158, 159, 233, 
	374, 162, 163, 164, 195, 197, 165, 194, 
	200, 205, 210, 217, 220, 231, 165, 166, 
	167, 168, 170, 167, 168, 170, 173, 169, 
	171, 172, 174, 175, 188, 190, 176, 414, 
	415, 419, 424, 431, 434, 445, 176, 408, 
	233, 178, 181, 179, 180, 182, 183, 409, 
	185, 413, 410, 187, 412, 411, 189, 191, 
	192, 414, 184, 194, 196, 198, 199, 201, 
	202, 203, 204, 206, 207, 208, 209, 211, 
	212, 213, 214, 215, 216, 218, 219, 221, 
	222, 225, 223, 224, 226, 227, 228, 229, 
	230, 232, 233, 234, 326, 327, 329, 330, 
	331, 333, 335, 336, 371, 407, 233, 233, 
	233, 3, 12, 244, 245, 246, 19, 248, 
	294, 249, 250, 251, 252, 253, 254, 20, 
	33, 35, 233, 22, 31, 263, 264, 265, 
	38, 267, 268, 269, 270, 272, 273, 274, 
	275, 276, 277, 279, 280, 282, 283, 286, 
	284, 285, 287, 288, 289, 290, 291, 293, 
	295, 296, 297, 299, 300, 301, 302, 303, 
	304, 305, 306, 233, 308, 309, 310, 311, 
	312, 314, 315, 318, 316, 317, 319, 320, 
	321, 322, 323, 325, 233, 44, 233, 53, 
	233, 113, 121, 233, 340, 341, 342, 135, 
	344, 345, 346, 347, 349, 350, 351, 352, 
	353, 354, 356, 357, 359, 360, 363, 361, 
	362, 364, 365, 366, 367, 368, 370, 136, 
	233, 233, 376, 377, 378, 160, 380, 381, 
	382, 383, 385, 386, 387, 388, 389, 390, 
	392, 393, 395, 396, 399, 397, 398, 400, 
	401, 402, 403, 404, 406, 161, 233, 177, 
	186, 416, 417, 418, 193, 420, 421, 422, 
	423, 425, 426, 427, 428, 429, 430, 432, 
	433, 435, 436, 439, 437, 438, 440, 441, 
	442, 443, 444, 446
]

class << self
	attr_accessor :_declare_trans_actions
	private :_declare_trans_actions, :_declare_trans_actions=
end
self._declare_trans_actions = [
	33, 0, 61, 35, 0, 3, 96, 0, 
	0, 96, 96, 96, 96, 96, 96, 0, 
	55, 31, 0, 0, 0, 0, 0, 0, 
	5, 0, 55, 55, 0, 55, 55, 0, 
	0, 0, 55, 0, 0, 3, 96, 0, 
	0, 96, 96, 96, 96, 96, 96, 0, 
	55, 0, 0, 0, 0, 0, 0, 5, 
	0, 55, 55, 0, 55, 55, 0, 0, 
	0, 55, 0, 1, 0, 1, 1, 0, 
	58, 0, 15, 0, 0, 0, 0, 0, 
	67, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 52, 52, 52, 
	52, 52, 52, 52, 52, 0, 0, 1, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 70, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 52, 
	52, 52, 52, 52, 52, 52, 52, 0, 
	0, 0, 0, 0, 27, 0, 0, 0, 
	0, 0, 0, 64, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 52, 52, 52, 52, 52, 52, 
	52, 52, 0, 0, 0, 0, 0, 29, 
	0, 0, 0, 0, 0, 0, 52, 52, 
	52, 52, 52, 52, 52, 52, 0, 0, 
	1, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 96, 
	96, 96, 96, 96, 96, 96, 0, 55, 
	25, 0, 0, 0, 0, 0, 0, 5, 
	0, 55, 55, 0, 55, 55, 0, 0, 
	0, 55, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 17, 92, 100, 73, 13, 13, 
	100, 100, 100, 100, 100, 100, 23, 21, 
	88, 0, 0, 55, 55, 55, 0, 55, 
	55, 55, 55, 55, 55, 55, 55, 7, 
	7, 7, 49, 0, 0, 55, 55, 55, 
	0, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 13, 84, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 19, 0, 40, 0, 
	43, 0, 0, 76, 0, 0, 13, 0, 
	0, 0, 0, 13, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	13, 0, 0, 0, 0, 13, 0, 0, 
	37, 80, 0, 0, 13, 0, 0, 0, 
	0, 13, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 13, 0, 
	0, 0, 0, 13, 0, 0, 46, 0, 
	0, 55, 55, 55, 0, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55, 55, 55, 55, 55, 
	55, 55, 55, 55
]

class << self
	attr_accessor :_declare_to_state_actions
	private :_declare_to_state_actions, :_declare_to_state_actions=
end
self._declare_to_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 9, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_declare_from_state_actions
	private :_declare_from_state_actions, :_declare_from_state_actions=
end
self._declare_from_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_declare_eof_trans
	private :_declare_eof_trans, :_declare_eof_trans=
end
self._declare_eof_trans = [
	1, 4, 4, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 4, 4, 
	4, 4, 4, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 18, 
	18, 18, 18, 18, 18, 18, 18, 1, 
	4, 1, 1, 1, 1, 1, 1, 1, 
	4, 4, 4, 4, 4, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 4, 4, 4, 
	4, 4, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 181, 
	1, 1, 1, 1, 1, 4, 4, 4, 
	4, 4, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	216, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 257, 257, 257, 257, 257, 257, 257, 
	257, 257, 257, 257, 1, 1, 1, 1, 
	1, 257, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 319, 320, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 339, 
	339, 339, 339, 339, 339, 339, 339, 339, 
	339, 339, 339, 339, 339, 339, 339, 339, 
	339, 339, 339, 339, 339, 339, 339, 339, 
	339, 339, 339, 339, 339, 339, 339, 339, 
	339, 339, 339, 339, 339, 339, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 380, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 321, 321, 
	321, 321, 321, 321, 321, 321, 319, 319, 
	397, 319, 319, 319, 399, 319, 401, 319, 
	319, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 404, 404, 404, 404, 404, 
	404, 404, 404, 319, 433, 434, 434, 434, 
	434, 434, 434, 434, 434, 434, 434, 434, 
	434, 434, 434, 434, 434, 434, 434, 434, 
	434, 434, 434, 434, 434, 434, 434, 434, 
	434, 434, 434, 434, 434, 434, 434, 319, 
	463, 463, 463, 463, 463, 463, 463, 463, 
	463, 463, 463, 463, 463, 463, 463, 463, 
	463, 463, 463, 463, 463, 463, 463, 463, 
	463, 463, 463, 463, 463, 463, 463, 463, 
	463, 463, 463, 463, 463, 463, 463
]

class << self
	attr_accessor :declare_start
end
self.declare_start = 233;
class << self
	attr_accessor :declare_first_final
end
self.declare_first_final = 233;
class << self
	attr_accessor :declare_error
end
self.declare_error = -1;

class << self
	attr_accessor :declare_en_main
end
self.declare_en_main = 233;


# line 87 "lib/vorax/parser/grammars/declare.rl"
          
# line 1688 "lib/vorax/parser/grammars/declare.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = declare_start
	ts = nil
	te = nil
	act = 0
end

# line 88 "lib/vorax/parser/grammars/declare.rl"
          
# line 1700 "lib/vorax/parser/grammars/declare.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	end
	if _goto_level <= _resume
	_acts = _declare_from_state_actions[cs]
	_nacts = _declare_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _declare_actions[_acts - 1]
			when 10 then
# line 1 "NONE"
		begin
ts = p
		end
# line 1730 "lib/vorax/parser/grammars/declare.rb"
		end # from state action switch
	end
	if _trigger_goto
		next
	end
	_keys = _declare_key_offsets[cs]
	_trans = _declare_index_offsets[cs]
	_klen = _declare_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _declare_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _declare_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _declare_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _declare_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _declare_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _declare_indicies[_trans]
	end
	if _goto_level <= _eof_trans
	cs = _declare_trans_targs[_trans]
	if _declare_trans_actions[_trans] != 0
		_acts = _declare_trans_actions[_trans]
		_nacts = _declare_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _declare_actions[_acts - 1]
when 0 then
# line 7 "lib/vorax/parser/grammars/declare.rl"
		begin

	start = p
	text = data[start..eof]
	pos = 0
	walker = PlsqlWalker.new(text)
	walker.register_spot(/;/) do |scanner|
		pos = scanner.pos
	  scanner.terminate
	end
	walker.walk
	if pos > 0
  	p = p + pos
    te = p
  end
		end
when 1 then
# line 23 "lib/vorax/parser/grammars/declare.rl"
		begin
@start = p		end
when 2 then
# line 23 "lib/vorax/parser/grammars/declare.rl"
		begin
@identifier = data[@start...p]		end
when 3 then
# line 25 "lib/vorax/parser/grammars/declare.rl"
		begin
@declared_at = p + 1		end
when 4 then
# line 26 "lib/vorax/parser/grammars/declare.rl"
		begin
@start = p		end
when 5 then
# line 26 "lib/vorax/parser/grammars/declare.rl"
		begin
@type = data[@start..p]		end
when 6 then
# line 34 "lib/vorax/parser/grammars/declare.rl"
		begin
@kind=:exception		end
when 7 then
# line 36 "lib/vorax/parser/grammars/declare.rl"
		begin
@kind=:constant		end
when 8 then
# line 38 "lib/vorax/parser/grammars/declare.rl"
		begin
@kind=:variable		end
when 11 then
# line 1 "NONE"
		begin
te = p+1
		end
when 12 then
# line 41 "lib/vorax/parser/grammars/declare.rl"
		begin
act = 1;		end
when 13 then
# line 42 "lib/vorax/parser/grammars/declare.rl"
		begin
act = 2;		end
when 14 then
# line 44 "lib/vorax/parser/grammars/declare.rl"
		begin
act = 4;		end
when 15 then
# line 45 "lib/vorax/parser/grammars/declare.rl"
		begin
act = 5;		end
when 16 then
# line 46 "lib/vorax/parser/grammars/declare.rl"
		begin
act = 6;		end
when 17 then
# line 59 "lib/vorax/parser/grammars/declare.rl"
		begin
act = 11;		end
when 18 then
# line 43 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p+1
		end
when 19 then
# line 59 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p+1
		end
when 20 then
# line 41 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1;		end
when 21 then
# line 42 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1;		end
when 22 then
# line 44 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1;		end
when 23 then
# line 45 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1;		end
when 24 then
# line 46 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1; begin  @items << CursorItem.new(@declared_at, @identifier, data[ts...te])  end
		end
when 25 then
# line 47 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1; begin  @items << TypeItem.new(@declared_at, @identifier, @type, data[ts...te])  end
		end
when 26 then
# line 48 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1; begin  @items << FunctionItem.new(@declared_at, data[ts...te])  end
		end
when 27 then
# line 49 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1; begin  @items << ProcedureItem.new(@declared_at, data[ts...te])  end
		end
when 28 then
# line 50 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1; begin 
  		if @kind == :exception
  		  @items << ExceptionItem.new(@declared_at, @identifier)
  		elsif @kind == :constant
        @items << ConstantItem.new(@declared_at, @identifier, @type)
  		elsif @kind == :variable
				@items << VariableItem.new(@declared_at, @identifier, @type)
  		end
  	 end
		end
when 29 then
# line 59 "lib/vorax/parser/grammars/declare.rl"
		begin
te = p
p = p - 1;		end
when 30 then
# line 47 "lib/vorax/parser/grammars/declare.rl"
		begin
 begin p = ((te))-1; end
 begin  @items << TypeItem.new(@declared_at, @identifier, @type, data[ts...te])  end
		end
when 31 then
# line 48 "lib/vorax/parser/grammars/declare.rl"
		begin
 begin p = ((te))-1; end
 begin  @items << FunctionItem.new(@declared_at, data[ts...te])  end
		end
when 32 then
# line 49 "lib/vorax/parser/grammars/declare.rl"
		begin
 begin p = ((te))-1; end
 begin  @items << ProcedureItem.new(@declared_at, data[ts...te])  end
		end
when 33 then
# line 50 "lib/vorax/parser/grammars/declare.rl"
		begin
 begin p = ((te))-1; end
 begin 
  		if @kind == :exception
  		  @items << ExceptionItem.new(@declared_at, @identifier)
  		elsif @kind == :constant
        @items << ConstantItem.new(@declared_at, @identifier, @type)
  		elsif @kind == :variable
				@items << VariableItem.new(@declared_at, @identifier, @type)
  		end
  	 end
		end
when 34 then
# line 59 "lib/vorax/parser/grammars/declare.rl"
		begin
 begin p = ((te))-1; end
		end
when 35 then
# line 1 "NONE"
		begin
	case act
	when 4 then
	begin begin p = ((te))-1; end
end
	when 5 then
	begin begin p = ((te))-1; end
end
	when 6 then
	begin begin p = ((te))-1; end
 @items << CursorItem.new(@declared_at, @identifier, data[ts...te]) end
	when 11 then
	begin begin p = ((te))-1; end
end
	else
	begin begin p = ((te))-1; end
end
end 
			end
# line 2007 "lib/vorax/parser/grammars/declare.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	_acts = _declare_to_state_actions[cs]
	_nacts = _declare_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _declare_actions[_acts - 1]
when 9 then
# line 1 "NONE"
		begin
ts = nil;		end
# line 2027 "lib/vorax/parser/grammars/declare.rb"
		end # to state action switch
	end
	if _trigger_goto
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	if _declare_eof_trans[cs] > 0
		_trans = _declare_eof_trans[cs] - 1;
		_goto_level = _eof_trans
		next;
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 89 "lib/vorax/parser/grammars/declare.rl"
        end
      end

    end

  end

end


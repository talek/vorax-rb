
# line 1 "lib/vorax/parser/grammars/package_spec.rl"

# line 41 "lib/vorax/parser/grammars/package_spec.rl"


require 'set'

module Vorax

  module Parser

    # A class used to parse a PLSQL package spec.
    class PackageSpec

      attr_reader :constants, :types, :exceptions, :cursors, :variables, :functions, :procedures

      # Walks the provided spec in order to compute the structure.
      #
      # param data [String] the package spec
      def walk(data)
        @constants = Set.new
        @types = Set.new
        @exceptions = Set.new
        @cursors = Set.new
        @variables = Set.new
        @functions = Set.new
        @procedures = Set.new
        if data
          eof = data.length
          
# line 33 "lib/vorax/parser/grammars/package_spec.rb"
class << self
	attr_accessor :_package_spec_actions
	private :_package_spec_actions, :_package_spec_actions=
end
self._package_spec_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 15, 1, 16, 1, 
	17, 1, 18, 1, 19, 1, 20, 1, 
	21, 1, 22, 1, 23, 1, 24, 1, 
	27, 1, 28, 1, 29, 2, 1, 25, 
	2, 1, 26, 2, 1, 29, 2, 4, 
	5, 2, 4, 6, 2, 4, 7, 2, 
	4, 8, 2, 4, 9, 2, 4, 10, 
	2, 4, 11, 2, 4, 12, 2, 4, 
	13, 2, 4, 14, 2, 17, 1, 3, 
	4, 0, 12, 3, 4, 0, 13, 3, 
	4, 1, 9, 3, 4, 1, 10, 3, 
	4, 1, 11, 3, 4, 8, 1
]

class << self
	attr_accessor :_package_spec_key_offsets
	private :_package_spec_key_offsets, :_package_spec_key_offsets=
end
self._package_spec_key_offsets = [
	0, 9, 10, 11, 12, 13, 15, 17, 
	22, 45, 46, 51, 52, 53, 54, 55, 
	57, 59, 61, 63, 65, 67, 69, 71, 
	73, 75, 77, 79, 81, 83, 85, 87, 
	93, 94, 95, 96, 97, 99, 113, 114, 
	115, 116, 117, 119, 135, 151, 167, 183, 
	199, 213, 230, 231, 236, 237, 238, 239, 
	240, 242, 256, 257, 258, 259, 260, 262, 
	278, 294, 310, 326, 342, 358, 374, 390, 
	406, 422, 438, 454, 470, 486, 502, 517, 
	518, 519, 520, 521, 523, 539, 555, 569, 
	578, 579, 580, 581, 582, 584, 600, 616, 
	632, 648, 664, 680, 696, 710, 727, 728, 
	729, 730, 731, 732, 734, 750, 768, 784, 
	800, 816, 832, 848, 864, 880, 896, 912, 
	926, 943, 944, 945, 946, 947, 948, 950, 
	966, 982, 998, 1012, 1029, 1030, 1035, 1036, 
	1037, 1038, 1039, 1041, 1055, 1056, 1057, 1058, 
	1059, 1061, 1077, 1093, 1109, 1125, 1141, 1157, 
	1173, 1189, 1205, 1221, 1237, 1253, 1269, 1285, 
	1301, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 
	1324, 1325, 1326, 1328, 1351, 1352, 1353, 1354, 
	1355, 1357, 1365, 1374, 1383, 1388, 1393, 1407, 
	1412, 1412, 1421, 1432, 1443, 1454, 1465, 1476, 
	1487, 1498, 1509, 1520, 1531, 1542, 1553, 1564, 
	1575, 1586, 1601, 1601, 1610, 1621, 1632, 1643, 
	1654, 1665, 1676, 1687, 1698, 1709, 1720, 1731, 
	1742, 1753, 1764, 1775, 1790, 1795, 1809, 1814, 
	1815, 1816, 1817, 1818, 1819
]

class << self
	attr_accessor :_package_spec_trans_keys
	private :_package_spec_trans_keys, :_package_spec_trans_keys=
end
self._package_spec_trans_keys = [
	32, 45, 47, 65, 73, 97, 105, 9, 
	13, 45, 10, 42, 42, 42, 47, 83, 
	115, 32, 45, 47, 9, 13, 32, 34, 
	45, 47, 67, 69, 70, 80, 84, 95, 
	99, 101, 102, 112, 116, 9, 13, 35, 
	36, 65, 90, 97, 122, 34, 32, 45, 
	47, 9, 13, 45, 10, 42, 42, 42, 
	47, 79, 111, 78, 110, 83, 115, 84, 
	116, 65, 97, 78, 110, 84, 116, 88, 
	120, 67, 99, 69, 101, 80, 112, 84, 
	116, 73, 105, 79, 111, 78, 110, 32, 
	45, 47, 59, 9, 13, 45, 10, 42, 
	42, 42, 47, 32, 45, 47, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 45, 10, 42, 42, 42, 47, 32, 
	45, 47, 85, 95, 117, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 82, 95, 114, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 83, 95, 115, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 79, 95, 111, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 82, 95, 114, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 34, 45, 
	47, 67, 69, 95, 99, 101, 9, 13, 
	35, 36, 65, 90, 97, 122, 34, 32, 
	45, 47, 9, 13, 45, 10, 42, 42, 
	42, 47, 32, 45, 47, 95, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	45, 10, 42, 42, 42, 47, 32, 45, 
	47, 79, 95, 111, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 78, 95, 110, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 83, 95, 115, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 84, 95, 116, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 65, 95, 97, 9, 13, 35, 36, 
	48, 57, 66, 90, 98, 122, 32, 45, 
	47, 78, 95, 110, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 84, 95, 116, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 88, 95, 120, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 67, 95, 99, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 69, 95, 101, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 80, 95, 112, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 84, 95, 116, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 73, 95, 105, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 79, 95, 111, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 78, 95, 110, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 59, 95, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 45, 10, 42, 
	42, 42, 47, 32, 45, 47, 78, 95, 
	110, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 68, 95, 
	100, 9, 13, 35, 36, 48, 57, 65, 
	90, 97, 122, 32, 45, 47, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 45, 47, 67, 69, 99, 101, 
	9, 13, 45, 10, 42, 42, 42, 47, 
	32, 45, 47, 85, 95, 117, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 78, 95, 110, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 67, 95, 99, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 84, 95, 116, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 73, 95, 105, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 79, 95, 111, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 78, 95, 110, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 34, 
	45, 47, 67, 69, 95, 99, 101, 9, 
	13, 35, 36, 65, 90, 97, 122, 34, 
	45, 10, 42, 42, 42, 47, 32, 45, 
	47, 82, 95, 114, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 65, 79, 95, 97, 111, 9, 13, 
	35, 36, 48, 57, 66, 90, 98, 122, 
	32, 45, 47, 71, 95, 103, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 77, 95, 109, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 65, 95, 97, 9, 13, 
	35, 36, 48, 57, 66, 90, 98, 122, 
	32, 45, 47, 67, 95, 99, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 69, 95, 101, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 68, 95, 100, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 85, 95, 117, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 82, 95, 114, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 69, 95, 101, 9, 13, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	32, 45, 47, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 34, 
	45, 47, 67, 69, 95, 99, 101, 9, 
	13, 35, 36, 65, 90, 97, 122, 34, 
	45, 10, 42, 42, 42, 47, 32, 45, 
	47, 89, 95, 121, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 80, 95, 112, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 69, 95, 101, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 95, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 32, 34, 45, 47, 
	67, 69, 95, 99, 101, 9, 13, 35, 
	36, 65, 90, 97, 122, 34, 32, 45, 
	47, 9, 13, 45, 10, 42, 42, 42, 
	47, 32, 45, 47, 95, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 45, 
	10, 42, 42, 42, 47, 32, 45, 47, 
	79, 95, 111, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	78, 95, 110, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	83, 95, 115, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	84, 95, 116, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	65, 95, 97, 9, 13, 35, 36, 48, 
	57, 66, 90, 98, 122, 32, 45, 47, 
	78, 95, 110, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	84, 95, 116, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	88, 95, 120, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	67, 95, 99, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	69, 95, 101, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	80, 95, 112, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	84, 95, 116, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	73, 95, 105, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	79, 95, 111, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	78, 95, 110, 9, 13, 35, 36, 48, 
	57, 65, 90, 97, 122, 32, 45, 47, 
	59, 95, 9, 13, 35, 36, 48, 57, 
	65, 90, 97, 122, 45, 10, 42, 42, 
	42, 47, 34, 39, 10, 42, 42, 47, 
	32, 34, 45, 47, 67, 69, 70, 80, 
	84, 95, 99, 101, 102, 112, 116, 9, 
	13, 35, 36, 65, 90, 97, 122, 45, 
	10, 42, 42, 42, 47, 32, 34, 39, 
	45, 47, 59, 9, 13, 32, 45, 47, 
	65, 73, 97, 105, 9, 13, 32, 45, 
	47, 67, 69, 99, 101, 9, 13, 32, 
	45, 47, 9, 13, 32, 45, 47, 9, 
	13, 32, 45, 47, 95, 9, 13, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 9, 13, 95, 35, 36, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 35, 36, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 35, 36, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 35, 36, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 35, 36, 48, 57, 
	66, 90, 98, 122, 78, 95, 110, 35, 
	36, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 35, 36, 48, 57, 65, 90, 
	97, 122, 88, 95, 120, 35, 36, 48, 
	57, 65, 90, 97, 122, 67, 95, 99, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 35, 36, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 35, 36, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 35, 36, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 35, 36, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 35, 
	36, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 35, 36, 48, 57, 65, 90, 
	97, 122, 32, 45, 47, 59, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 95, 35, 36, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 35, 36, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 35, 36, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 35, 36, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 35, 36, 48, 57, 66, 90, 98, 
	122, 78, 95, 110, 35, 36, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 35, 
	36, 48, 57, 65, 90, 97, 122, 88, 
	95, 120, 35, 36, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 35, 36, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	35, 36, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 35, 36, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 35, 36, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 35, 36, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 35, 36, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 35, 
	36, 48, 57, 65, 90, 97, 122, 32, 
	45, 47, 59, 95, 9, 13, 35, 36, 
	48, 57, 65, 90, 97, 122, 32, 45, 
	47, 9, 13, 32, 45, 47, 95, 9, 
	13, 35, 36, 48, 57, 65, 90, 97, 
	122, 32, 45, 47, 9, 13, 34, 39, 
	39, 45, 42, 32, 34, 45, 47, 67, 
	69, 70, 80, 84, 95, 99, 101, 102, 
	112, 116, 9, 13, 35, 36, 65, 90, 
	97, 122, 0
]

class << self
	attr_accessor :_package_spec_single_lengths
	private :_package_spec_single_lengths, :_package_spec_single_lengths=
end
self._package_spec_single_lengths = [
	7, 1, 1, 1, 1, 2, 2, 3, 
	15, 1, 3, 1, 1, 1, 1, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 4, 
	1, 1, 1, 1, 2, 4, 1, 1, 
	1, 1, 2, 6, 6, 6, 6, 6, 
	4, 9, 1, 3, 1, 1, 1, 1, 
	2, 4, 1, 1, 1, 1, 2, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 5, 1, 
	1, 1, 1, 2, 6, 6, 4, 7, 
	1, 1, 1, 1, 2, 6, 6, 6, 
	6, 6, 6, 6, 4, 9, 1, 1, 
	1, 1, 1, 2, 6, 8, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 4, 
	9, 1, 1, 1, 1, 1, 2, 6, 
	6, 6, 4, 9, 1, 3, 1, 1, 
	1, 1, 2, 4, 1, 1, 1, 1, 
	2, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	5, 1, 1, 1, 1, 2, 1, 1, 
	1, 1, 2, 15, 1, 1, 1, 1, 
	2, 6, 7, 7, 3, 3, 4, 3, 
	0, 1, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 5, 0, 1, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 4, 3, 1, 
	1, 1, 1, 1, 15
]

class << self
	attr_accessor :_package_spec_range_lengths
	private :_package_spec_range_lengths, :_package_spec_range_lengths=
end
self._package_spec_range_lengths = [
	1, 0, 0, 0, 0, 0, 0, 1, 
	4, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 0, 5, 0, 0, 
	0, 0, 0, 5, 5, 5, 5, 5, 
	5, 4, 0, 1, 0, 0, 0, 0, 
	0, 5, 0, 0, 0, 0, 0, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 0, 
	0, 0, 0, 0, 5, 5, 5, 1, 
	0, 0, 0, 0, 0, 5, 5, 5, 
	5, 5, 5, 5, 5, 4, 0, 0, 
	0, 0, 0, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	4, 0, 0, 0, 0, 0, 0, 5, 
	5, 5, 5, 4, 0, 1, 0, 0, 
	0, 0, 0, 5, 0, 0, 0, 0, 
	0, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 4, 0, 0, 0, 0, 
	0, 1, 1, 1, 1, 1, 5, 1, 
	0, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 5, 0, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 5, 1, 5, 1, 0, 
	0, 0, 0, 0, 4
]

class << self
	attr_accessor :_package_spec_index_offsets
	private :_package_spec_index_offsets, :_package_spec_index_offsets=
end
self._package_spec_index_offsets = [
	0, 9, 11, 13, 15, 17, 20, 23, 
	28, 48, 50, 55, 57, 59, 61, 63, 
	66, 69, 72, 75, 78, 81, 84, 87, 
	90, 93, 96, 99, 102, 105, 108, 111, 
	117, 119, 121, 123, 125, 128, 138, 140, 
	142, 144, 146, 149, 161, 173, 185, 197, 
	209, 219, 233, 235, 240, 242, 244, 246, 
	248, 251, 261, 263, 265, 267, 269, 272, 
	284, 296, 308, 320, 332, 344, 356, 368, 
	380, 392, 404, 416, 428, 440, 452, 463, 
	465, 467, 469, 471, 474, 486, 498, 508, 
	517, 519, 521, 523, 525, 528, 540, 552, 
	564, 576, 588, 600, 612, 622, 636, 638, 
	640, 642, 644, 646, 649, 661, 675, 687, 
	699, 711, 723, 735, 747, 759, 771, 783, 
	793, 807, 809, 811, 813, 815, 817, 820, 
	832, 844, 856, 866, 880, 882, 887, 889, 
	891, 893, 895, 898, 908, 910, 912, 914, 
	916, 919, 931, 943, 955, 967, 979, 991, 
	1003, 1015, 1027, 1039, 1051, 1063, 1075, 1087, 
	1099, 1110, 1112, 1114, 1116, 1118, 1121, 1123, 
	1125, 1127, 1129, 1132, 1152, 1154, 1156, 1158, 
	1160, 1163, 1171, 1180, 1189, 1194, 1199, 1209, 
	1214, 1215, 1221, 1229, 1237, 1245, 1253, 1261, 
	1269, 1277, 1285, 1293, 1301, 1309, 1317, 1325, 
	1333, 1341, 1352, 1353, 1359, 1367, 1375, 1383, 
	1391, 1399, 1407, 1415, 1423, 1431, 1439, 1447, 
	1455, 1463, 1471, 1479, 1490, 1495, 1505, 1510, 
	1512, 1514, 1516, 1518, 1520
]

class << self
	attr_accessor :_package_spec_indicies
	private :_package_spec_indicies, :_package_spec_indicies=
end
self._package_spec_indicies = [
	1, 2, 3, 4, 4, 4, 4, 1, 
	0, 5, 0, 1, 5, 6, 0, 7, 
	6, 7, 1, 6, 8, 8, 0, 9, 
	10, 11, 9, 0, 9, 12, 10, 11, 
	14, 15, 16, 17, 18, 13, 14, 15, 
	16, 17, 18, 9, 13, 13, 13, 0, 
	20, 19, 21, 22, 23, 21, 0, 24, 
	0, 25, 24, 26, 0, 27, 26, 27, 
	25, 26, 28, 28, 0, 29, 29, 0, 
	30, 30, 0, 31, 31, 0, 32, 32, 
	0, 33, 33, 0, 34, 34, 0, 35, 
	35, 0, 36, 36, 0, 37, 37, 0, 
	38, 38, 0, 39, 39, 0, 40, 40, 
	0, 41, 41, 0, 42, 42, 0, 43, 
	44, 45, 46, 43, 0, 47, 0, 43, 
	47, 48, 0, 49, 48, 49, 43, 48, 
	21, 22, 23, 50, 21, 50, 50, 50, 
	50, 0, 51, 0, 9, 51, 52, 0, 
	53, 52, 53, 9, 52, 21, 22, 23, 
	54, 50, 54, 21, 50, 50, 50, 50, 
	0, 21, 22, 23, 55, 50, 55, 21, 
	50, 50, 50, 50, 0, 21, 22, 23, 
	56, 50, 56, 21, 50, 50, 50, 50, 
	0, 21, 22, 23, 57, 50, 57, 21, 
	50, 50, 50, 50, 0, 21, 22, 23, 
	58, 50, 58, 21, 50, 50, 50, 50, 
	0, 59, 60, 61, 50, 59, 50, 50, 
	50, 50, 0, 62, 63, 65, 66, 67, 
	68, 64, 67, 68, 62, 64, 64, 64, 
	0, 70, 69, 71, 72, 73, 71, 0, 
	74, 0, 75, 74, 76, 0, 77, 76, 
	77, 75, 76, 71, 72, 73, 78, 71, 
	78, 78, 78, 78, 0, 79, 0, 62, 
	79, 80, 0, 81, 80, 81, 62, 80, 
	71, 72, 73, 82, 78, 82, 71, 78, 
	78, 78, 78, 0, 71, 72, 73, 83, 
	78, 83, 71, 78, 78, 78, 78, 0, 
	71, 72, 73, 84, 78, 84, 71, 78, 
	78, 78, 78, 0, 71, 72, 73, 85, 
	78, 85, 71, 78, 78, 78, 78, 0, 
	71, 72, 73, 86, 78, 86, 71, 78, 
	78, 78, 78, 0, 71, 72, 73, 87, 
	78, 87, 71, 78, 78, 78, 78, 0, 
	71, 72, 73, 88, 78, 88, 71, 78, 
	78, 78, 78, 0, 71, 72, 73, 89, 
	78, 89, 71, 78, 78, 78, 78, 0, 
	71, 72, 73, 90, 78, 90, 71, 78, 
	78, 78, 78, 0, 71, 72, 73, 91, 
	78, 91, 71, 78, 78, 78, 78, 0, 
	71, 72, 73, 92, 78, 92, 71, 78, 
	78, 78, 78, 0, 71, 72, 73, 93, 
	78, 93, 71, 78, 78, 78, 78, 0, 
	71, 72, 73, 94, 78, 94, 71, 78, 
	78, 78, 78, 0, 71, 72, 73, 95, 
	78, 95, 71, 78, 78, 78, 78, 0, 
	71, 72, 73, 96, 78, 96, 71, 78, 
	78, 78, 78, 0, 97, 98, 99, 46, 
	78, 97, 78, 78, 78, 78, 0, 100, 
	0, 101, 100, 102, 0, 103, 102, 103, 
	101, 102, 21, 22, 23, 104, 50, 104, 
	21, 50, 50, 50, 50, 0, 21, 22, 
	23, 105, 50, 105, 21, 50, 50, 50, 
	50, 0, 106, 107, 108, 50, 106, 50, 
	50, 50, 50, 0, 109, 110, 111, 112, 
	113, 112, 113, 109, 0, 114, 0, 109, 
	114, 115, 0, 116, 115, 116, 109, 115, 
	21, 22, 23, 117, 50, 117, 21, 50, 
	50, 50, 50, 0, 21, 22, 23, 118, 
	50, 118, 21, 50, 50, 50, 50, 0, 
	21, 22, 23, 119, 50, 119, 21, 50, 
	50, 50, 50, 0, 21, 22, 23, 120, 
	50, 120, 21, 50, 50, 50, 50, 0, 
	21, 22, 23, 121, 50, 121, 21, 50, 
	50, 50, 50, 0, 21, 22, 23, 122, 
	50, 122, 21, 50, 50, 50, 50, 0, 
	21, 22, 23, 123, 50, 123, 21, 50, 
	50, 50, 50, 0, 124, 125, 126, 50, 
	124, 50, 50, 50, 50, 0, 127, 128, 
	130, 131, 132, 133, 129, 132, 133, 127, 
	129, 129, 129, 0, 135, 134, 136, 0, 
	127, 136, 137, 0, 138, 137, 138, 127, 
	137, 21, 22, 23, 139, 50, 139, 21, 
	50, 50, 50, 50, 0, 21, 22, 23, 
	140, 141, 50, 140, 141, 21, 50, 50, 
	50, 50, 0, 21, 22, 23, 142, 50, 
	142, 21, 50, 50, 50, 50, 0, 21, 
	22, 23, 143, 50, 143, 21, 50, 50, 
	50, 50, 0, 21, 22, 23, 105, 50, 
	105, 21, 50, 50, 50, 50, 0, 21, 
	22, 23, 144, 50, 144, 21, 50, 50, 
	50, 50, 0, 21, 22, 23, 145, 50, 
	145, 21, 50, 50, 50, 50, 0, 21, 
	22, 23, 146, 50, 146, 21, 50, 50, 
	50, 50, 0, 21, 22, 23, 147, 50, 
	147, 21, 50, 50, 50, 50, 0, 21, 
	22, 23, 148, 50, 148, 21, 50, 50, 
	50, 50, 0, 21, 22, 23, 149, 50, 
	149, 21, 50, 50, 50, 50, 0, 150, 
	151, 152, 50, 150, 50, 50, 50, 50, 
	0, 153, 154, 156, 157, 158, 159, 155, 
	158, 159, 153, 155, 155, 155, 0, 161, 
	160, 162, 0, 153, 162, 163, 0, 164, 
	163, 164, 153, 163, 21, 22, 23, 165, 
	50, 165, 21, 50, 50, 50, 50, 0, 
	21, 22, 23, 166, 50, 166, 21, 50, 
	50, 50, 50, 0, 21, 22, 23, 167, 
	50, 167, 21, 50, 50, 50, 50, 0, 
	168, 169, 170, 50, 168, 50, 50, 50, 
	50, 0, 171, 172, 174, 175, 176, 177, 
	173, 176, 177, 171, 173, 173, 173, 0, 
	179, 178, 180, 181, 182, 180, 0, 183, 
	0, 184, 183, 185, 0, 186, 185, 186, 
	184, 185, 180, 181, 182, 187, 180, 187, 
	187, 187, 187, 0, 188, 0, 171, 188, 
	189, 0, 190, 189, 190, 171, 189, 180, 
	181, 182, 191, 187, 191, 180, 187, 187, 
	187, 187, 0, 180, 181, 182, 192, 187, 
	192, 180, 187, 187, 187, 187, 0, 180, 
	181, 182, 193, 187, 193, 180, 187, 187, 
	187, 187, 0, 180, 181, 182, 194, 187, 
	194, 180, 187, 187, 187, 187, 0, 180, 
	181, 182, 195, 187, 195, 180, 187, 187, 
	187, 187, 0, 180, 181, 182, 196, 187, 
	196, 180, 187, 187, 187, 187, 0, 180, 
	181, 182, 197, 187, 197, 180, 187, 187, 
	187, 187, 0, 180, 181, 182, 198, 187, 
	198, 180, 187, 187, 187, 187, 0, 180, 
	181, 182, 199, 187, 199, 180, 187, 187, 
	187, 187, 0, 180, 181, 182, 200, 187, 
	200, 180, 187, 187, 187, 187, 0, 180, 
	181, 182, 201, 187, 201, 180, 187, 187, 
	187, 187, 0, 180, 181, 182, 202, 187, 
	202, 180, 187, 187, 187, 187, 0, 180, 
	181, 182, 203, 187, 203, 180, 187, 187, 
	187, 187, 0, 180, 181, 182, 204, 187, 
	204, 180, 187, 187, 187, 187, 0, 180, 
	181, 182, 205, 187, 205, 180, 187, 187, 
	187, 187, 0, 206, 207, 208, 46, 187, 
	206, 187, 187, 187, 187, 0, 209, 0, 
	210, 209, 211, 0, 212, 211, 212, 210, 
	211, 215, 214, 217, 216, 219, 218, 221, 
	220, 221, 219, 220, 222, 12, 223, 224, 
	14, 15, 16, 17, 18, 13, 14, 15, 
	16, 17, 18, 222, 13, 13, 13, 213, 
	225, 213, 222, 225, 226, 213, 227, 226, 
	227, 222, 226, 229, 230, 231, 232, 233, 
	234, 229, 228, 1, 2, 3, 4, 4, 
	4, 4, 1, 0, 25, 236, 237, 112, 
	113, 112, 113, 25, 235, 43, 44, 45, 
	43, 238, 75, 240, 241, 75, 239, 71, 
	72, 73, 78, 71, 78, 78, 78, 78, 
	242, 101, 243, 244, 101, 238, 245, 247, 
	247, 247, 247, 247, 246, 248, 247, 248, 
	247, 247, 247, 247, 245, 249, 247, 249, 
	247, 247, 247, 247, 245, 250, 247, 250, 
	247, 247, 247, 247, 245, 251, 247, 251, 
	247, 247, 247, 247, 245, 252, 247, 252, 
	247, 247, 247, 247, 245, 253, 247, 253, 
	247, 247, 247, 247, 245, 254, 247, 254, 
	247, 247, 247, 247, 245, 255, 247, 255, 
	247, 247, 247, 247, 245, 256, 247, 256, 
	247, 247, 247, 247, 245, 257, 247, 257, 
	247, 247, 247, 247, 245, 258, 247, 258, 
	247, 247, 247, 247, 245, 259, 247, 259, 
	247, 247, 247, 247, 245, 260, 247, 260, 
	247, 247, 247, 247, 245, 261, 247, 261, 
	247, 247, 247, 247, 245, 262, 247, 262, 
	247, 247, 247, 247, 245, 263, 264, 265, 
	266, 247, 263, 247, 247, 247, 247, 245, 
	267, 268, 268, 268, 268, 268, 246, 269, 
	268, 269, 268, 268, 268, 268, 267, 270, 
	268, 270, 268, 268, 268, 268, 267, 271, 
	268, 271, 268, 268, 268, 268, 267, 272, 
	268, 272, 268, 268, 268, 268, 267, 273, 
	268, 273, 268, 268, 268, 268, 267, 274, 
	268, 274, 268, 268, 268, 268, 267, 275, 
	268, 275, 268, 268, 268, 268, 267, 276, 
	268, 276, 268, 268, 268, 268, 267, 277, 
	268, 277, 268, 268, 268, 268, 267, 278, 
	268, 278, 268, 268, 268, 268, 267, 279, 
	268, 279, 268, 268, 268, 268, 267, 280, 
	268, 280, 268, 268, 268, 268, 267, 281, 
	268, 281, 268, 268, 268, 268, 267, 282, 
	268, 282, 268, 268, 268, 268, 267, 283, 
	268, 283, 268, 268, 268, 268, 267, 263, 
	264, 265, 266, 268, 263, 268, 268, 268, 
	268, 267, 184, 285, 286, 184, 284, 180, 
	181, 182, 187, 180, 187, 187, 187, 187, 
	242, 210, 287, 288, 210, 238, 215, 214, 
	217, 216, 216, 290, 218, 289, 220, 289, 
	222, 12, 223, 224, 14, 15, 16, 17, 
	18, 13, 14, 15, 16, 17, 18, 222, 
	13, 13, 13, 289, 0
]

class << self
	attr_accessor :_package_spec_trans_targs
	private :_package_spec_trans_targs, :_package_spec_trans_targs=
end
self._package_spec_trans_targs = [
	177, 0, 1, 3, 6, 2, 4, 5, 
	7, 8, 38, 40, 9, 37, 43, 84, 
	93, 108, 127, 9, 10, 179, 11, 13, 
	12, 179, 14, 15, 17, 18, 19, 20, 
	21, 22, 177, 24, 25, 26, 27, 28, 
	29, 30, 31, 180, 32, 34, 177, 33, 
	35, 36, 37, 39, 41, 42, 44, 45, 
	46, 47, 48, 49, 58, 60, 49, 50, 
	57, 58, 60, 63, 70, 50, 51, 181, 
	52, 54, 53, 181, 55, 56, 57, 59, 
	61, 62, 64, 65, 66, 67, 68, 69, 
	182, 71, 72, 73, 74, 75, 76, 77, 
	78, 183, 79, 81, 80, 183, 82, 83, 
	85, 86, 87, 88, 90, 87, 88, 90, 
	16, 23, 89, 91, 92, 94, 95, 96, 
	97, 98, 99, 100, 101, 103, 105, 101, 
	102, 185, 103, 105, 186, 193, 102, 184, 
	104, 106, 107, 109, 110, 113, 111, 112, 
	114, 115, 116, 117, 118, 119, 120, 122, 
	124, 120, 121, 203, 122, 124, 204, 211, 
	121, 202, 123, 125, 126, 128, 129, 130, 
	131, 140, 142, 131, 132, 139, 140, 142, 
	145, 152, 132, 133, 220, 134, 136, 135, 
	220, 137, 138, 139, 141, 143, 144, 146, 
	147, 148, 149, 150, 151, 221, 153, 154, 
	155, 156, 157, 158, 159, 160, 222, 161, 
	163, 162, 222, 164, 165, 177, 166, 177, 
	167, 225, 168, 178, 169, 170, 171, 172, 
	174, 173, 175, 176, 177, 178, 223, 224, 
	226, 227, 228, 177, 11, 13, 177, 177, 
	52, 54, 177, 79, 81, 177, 177, 185, 
	187, 188, 189, 190, 191, 192, 185, 194, 
	195, 196, 197, 198, 199, 200, 201, 180, 
	32, 34, 177, 177, 203, 205, 206, 207, 
	208, 209, 210, 203, 212, 213, 214, 215, 
	216, 217, 218, 219, 177, 134, 136, 161, 
	163, 177, 177
]

class << self
	attr_accessor :_package_spec_trans_actions
	private :_package_spec_trans_actions, :_package_spec_trans_actions=
end
self._package_spec_trans_actions = [
	35, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 1, 1, 
	1, 1, 1, 0, 0, 95, 3, 3, 
	0, 64, 0, 0, 0, 0, 0, 0, 
	0, 0, 13, 0, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 15, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 3, 3, 3, 0, 1, 
	1, 0, 0, 1, 1, 0, 0, 87, 
	3, 3, 0, 58, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	52, 0, 0, 0, 0, 0, 0, 0, 
	0, 99, 3, 3, 0, 55, 0, 0, 
	0, 0, 3, 3, 3, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 3, 3, 3, 0, 
	1, 79, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 3, 
	3, 0, 1, 83, 0, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 3, 0, 1, 1, 0, 0, 
	1, 1, 0, 0, 91, 3, 3, 0, 
	61, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 52, 0, 0, 
	0, 0, 0, 0, 0, 0, 99, 3, 
	3, 0, 55, 0, 0, 33, 0, 11, 
	0, 46, 0, 49, 0, 0, 0, 0, 
	0, 0, 0, 0, 17, 73, 9, 73, 
	9, 9, 73, 29, 0, 0, 23, 25, 
	0, 0, 21, 0, 0, 37, 43, 67, 
	0, 0, 0, 0, 0, 0, 52, 0, 
	0, 0, 0, 0, 0, 0, 67, 99, 
	3, 3, 76, 40, 70, 0, 0, 0, 
	0, 0, 0, 52, 0, 0, 0, 0, 
	0, 0, 0, 70, 27, 0, 0, 0, 
	0, 31, 19
]

class << self
	attr_accessor :_package_spec_to_state_actions
	private :_package_spec_to_state_actions, :_package_spec_to_state_actions=
end
self._package_spec_to_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
]

class << self
	attr_accessor :_package_spec_from_state_actions
	private :_package_spec_from_state_actions, :_package_spec_from_state_actions=
end
self._package_spec_from_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 7, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
]

class << self
	attr_accessor :_package_spec_eof_trans
	private :_package_spec_eof_trans, :_package_spec_eof_trans=
end
self._package_spec_eof_trans = [
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 214, 1, 
	214, 214, 214, 214, 214, 214, 214, 214, 
	214, 0, 1, 236, 239, 240, 243, 239, 
	246, 247, 246, 246, 246, 246, 246, 246, 
	246, 246, 246, 246, 246, 246, 246, 246, 
	246, 246, 268, 247, 268, 268, 268, 268, 
	268, 268, 268, 268, 268, 268, 268, 268, 
	268, 268, 268, 268, 285, 243, 239, 290, 
	290, 291, 290, 290, 290
]

class << self
	attr_accessor :package_spec_start
end
self.package_spec_start = 177;
class << self
	attr_accessor :package_spec_first_final
end
self.package_spec_first_final = 177;
class << self
	attr_accessor :package_spec_error
end
self.package_spec_error = -1;

class << self
	attr_accessor :package_spec_en_main
end
self.package_spec_en_main = 177;


# line 68 "lib/vorax/parser/grammars/package_spec.rl"
          
# line 853 "lib/vorax/parser/grammars/package_spec.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = package_spec_start
	ts = nil
	te = nil
	act = 0
end

# line 69 "lib/vorax/parser/grammars/package_spec.rl"
          
# line 865 "lib/vorax/parser/grammars/package_spec.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	end
	if _goto_level <= _resume
	_acts = _package_spec_from_state_actions[cs]
	_nacts = _package_spec_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _package_spec_actions[_acts - 1]
			when 3 then
# line 1 "NONE"
		begin
ts = p
		end
# line 895 "lib/vorax/parser/grammars/package_spec.rb"
		end # from state action switch
	end
	if _trigger_goto
		next
	end
	_keys = _package_spec_key_offsets[cs]
	_trans = _package_spec_index_offsets[cs]
	_klen = _package_spec_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _package_spec_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _package_spec_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _package_spec_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _package_spec_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _package_spec_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _package_spec_indicies[_trans]
	end
	if _goto_level <= _eof_trans
	cs = _package_spec_trans_targs[_trans]
	if _package_spec_trans_actions[_trans] != 0
		_acts = _package_spec_trans_actions[_trans]
		_nacts = _package_spec_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _package_spec_actions[_acts - 1]
when 0 then
# line 7 "lib/vorax/parser/grammars/package_spec.rl"
		begin

  @start = p
		end
when 1 then
# line 11 "lib/vorax/parser/grammars/package_spec.rl"
		begin

  @end = p - 1
		end
when 4 then
# line 1 "NONE"
		begin
te = p+1
		end
when 5 then
# line 28 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 1;		end
when 6 then
# line 30 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 3;		end
when 7 then
# line 31 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 4;		end
when 8 then
# line 32 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 5;		end
when 9 then
# line 33 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 6;		end
when 10 then
# line 34 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 7;		end
when 11 then
# line 35 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 8;		end
when 12 then
# line 36 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 9;		end
when 13 then
# line 37 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 10;		end
when 14 then
# line 38 "lib/vorax/parser/grammars/package_spec.rl"
		begin
act = 11;		end
when 15 then
# line 29 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p+1
		end
when 16 then
# line 31 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p+1
 begin  @constants.add(data[(@start..@end)])  end
		end
when 17 then
# line 32 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p+1
 begin  @exceptions.add(data[(@start..@end)])  end
		end
when 18 then
# line 38 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p+1
		end
when 19 then
# line 28 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1;		end
when 20 then
# line 31 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1; begin  @constants.add(data[(@start..@end)])  end
		end
when 21 then
# line 32 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1; begin  @exceptions.add(data[(@start..@end)])  end
		end
when 22 then
# line 33 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1; begin  @cursors.add(data[(@start..@end)])  end
		end
when 23 then
# line 34 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1; begin  @types.add(data[(@start..@end)])  end
		end
when 24 then
# line 35 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1; begin  @variables.add(data[(@start..@end)])  end
		end
when 25 then
# line 36 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1; begin  @functions.add(data[(@start..@end)])  end
		end
when 26 then
# line 37 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1; begin  @procedures.add(data[(@start..@end)])  end
		end
when 27 then
# line 38 "lib/vorax/parser/grammars/package_spec.rl"
		begin
te = p
p = p - 1;		end
when 28 then
# line 38 "lib/vorax/parser/grammars/package_spec.rl"
		begin
 begin p = ((te))-1; end
		end
when 29 then
# line 1 "NONE"
		begin
	case act
	when 4 then
	begin begin p = ((te))-1; end
 @constants.add(data[(@start..@end)]) end
	when 5 then
	begin begin p = ((te))-1; end
 @exceptions.add(data[(@start..@end)]) end
	when 6 then
	begin begin p = ((te))-1; end
 @cursors.add(data[(@start..@end)]) end
	when 7 then
	begin begin p = ((te))-1; end
 @types.add(data[(@start..@end)]) end
	when 8 then
	begin begin p = ((te))-1; end
 @variables.add(data[(@start..@end)]) end
	when 9 then
	begin begin p = ((te))-1; end
 @functions.add(data[(@start..@end)]) end
	when 10 then
	begin begin p = ((te))-1; end
 @procedures.add(data[(@start..@end)]) end
	when 11 then
	begin begin p = ((te))-1; end
end
	else
	begin begin p = ((te))-1; end
end
end 
			end
# line 1131 "lib/vorax/parser/grammars/package_spec.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	_acts = _package_spec_to_state_actions[cs]
	_nacts = _package_spec_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _package_spec_actions[_acts - 1]
when 2 then
# line 1 "NONE"
		begin
ts = nil;		end
# line 1151 "lib/vorax/parser/grammars/package_spec.rb"
		end # to state action switch
	end
	if _trigger_goto
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	if _package_spec_eof_trans[cs] > 0
		_trans = _package_spec_eof_trans[cs] - 1;
		_goto_level = _eof_trans
		next;
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 70 "lib/vorax/parser/grammars/package_spec.rl"
        end
      end

    end

  end

end

